interactions:
- request:
    body: '{"messages":[{"role":"system","content":"<introduction>\nYou will be assigned
      tasks involving the extraction, analysis, and interpretation of data within
      various types of documents. Your role is to carefully process the information
      and provide accurate, relevant outputs based on the specific instructions provided.\n</introduction>\n\n<guidance_on_instruction_structure>\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\n</guidance_on_instruction_structure>\n\n<key_terminology>\nKEY TERMINOLOGY
      TO UNDERSTAND:\n\n  <document_definition>\n  1. Document: A structured or unstructured
      file containing written or visual content. Documents can vary in type and purpose,
      including but not limited to:\n    <document_types>\n    - Contracts: Legal
      agreements defining terms and obligations.\n    - Invoices: Financial documents
      detailing transactions and payments.\n    - Curricula Vitae (CVs): Resumes outlining
      an individual''s professional experience and qualifications.\n    - Visual Documents:
      Images, scanned documents, blueprints, photographs, charts, diagrams, or screenshots
      that contain relevant information.\n    - General Documents: Any other types
      of files that may contain text, tables, images, or mixed formats.\n    </document_types>\n  \n  Note
      that occasionally you may be working with document fragments rather than complete
      documents. These fragments represent portions of a larger document and should
      be analyzed within their limited context. When working with fragments, focus
      on extracting information from the available content without making assumptions
      about missing parts.\n\n    <content_types>\n    Documents may contain textual
      or visual content:\n    - Text-based content: Written information that can be
      directly read and processed.\n    - Visual content: Images, charts, diagrams,
      blueprints, tables, handwritten text, or other visual elements that require
      visual interpretation.\n    </content_types>\n  </document_definition>\n\n  <aspect_definition>\n  2.
      Aspect: A defined area or topic within a document that requires focused attention.
      Each aspect corresponds to a specific subject or theme described in the task.
      For example:\n    <aspect_examples>\n    - Contract Aspects: Payment terms,
      parties involved, or termination clauses.\n    - Invoice Aspects: Due dates,
      line-item breakdowns, or tax details.\n    - CV Aspects: Work experience, education,
      or skills.\n    </aspect_examples>\n  You will analyze aspects as instructed,
      considering their relevance and context within the document.\n  </aspect_definition>\n\n  <concept_definition>\n  3.
      Concept: A unit of information or an entity relevant to the task. Concepts may
      be derived from an aspect or the broader document context. They represent a
      wide range of data points and insights, from simple entities (names, dates,
      monetary values) to complex evaluations, conclusions, and answers to specific
      questions. Concepts can be:\n    <concept_types>\n    - Factual extractions:
      Such as a penalty clause in a contract, a total amount due in an invoice, or
      a certification in a CV.\n    - Analytical insights: Such as risk assessments,
      compliance evaluations, or pattern identifications.\n    - Reasoned conclusions:
      Such as determining whether a document meets specific criteria or answers particular
      questions.\n    - Interpretative judgments: Such as ratings, classifications,
      or qualitative assessments based on document content.\n    - Label classifications:
      Content categorization using predefined labels.\n    </concept_types>\n  </concept_definition>\n\n</key_terminology>\n\n<critical_guidelines>\nCRITICAL
      GUIDELINES FOR YOUR WORK:\n\n  <precision_and_accuracy>\n  - Precision and accuracy:
      Extract only information that is explicitly stated or can be directly inferred
      from the document content. Avoid speculation or assumptions beyond what the
      document content clearly supports.\n  </precision_and_accuracy>\n\n  <visual_content_analysis>\n  -
      Visual content analysis: When processing visual content (images):\n    -- Examine
      all visual elements carefully, including text within images, charts, diagrams,
      logos, layout structures, etc.\n    -- Identify and analyze visual patterns,
      relationships, and structural information that may not be explicitly stated
      in text.\n    -- Consider the visual context and layout as it may provide important
      semantic information.\n    -- Analyze information in tables, forms, charts,
      and diagrams with attention to their visual structure and relationships.\n  </visual_content_analysis>\n\n  <contextual_understanding>\n  -
      Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\n  </contextual_understanding>\n\n  <systematic_analysis>\n  -
      Systematic analysis: Before extracting, thoroughly understand:\n    -- The nature
      and type of the document\n    -- The specific aspects or concepts you need to
      focus on\n    -- The expected output format and structure requirements\n    --
      Any constraints or special handling instructions\n  </systematic_analysis>\n\n  <quality_control>\n  -
      Quality control: After extraction, verify that:\n    -- All extracted information
      directly relates to the specified aspects/concepts\n    -- The output format
      matches the required schema exactly\n    -- No extraneous information has been
      included\n    -- All mandatory fields are present and correctly populated\n  </quality_control>\n\n  <conservative_approach>\n  -
      Conservative approach: When in doubt about whether information qualifies for
      extraction:\n    -- If the relevance is unclear, err on the side of exclusion\n    --
      If multiple interpretations are possible, choose the most conservative one\n    --
      If information is ambiguous, do not force an extraction\n  </conservative_approach>\n\n  <structured_output_compliance>\n  -
      Structured output compliance: Adhere strictly to the specified JSON format requirements.
      Do not:\n    -- Add extra fields beyond what is requested\n    -- Modify the
      structure or field names\n    -- Include explanatory text outside the JSON structure\n    --
      Use code blocks or formatting markers unless explicitly required\n  </structured_output_compliance>\n\n</critical_guidelines>\n\n<expected_deliverables>\nEXPECTED
      DELIVERABLES:\n  <deliverable_types>\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\n  </deliverable_types>\n</expected_deliverables>\n\n\n<conclusion>\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\n</conclusion>"},{"role":"user","content":"<introduction>\nBelow
      you will find document text and a list of concepts.\n</introduction>\n\n<guidance_on_task_structure>\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\n</guidance_on_task_structure>\n\n<task_description>\nYour
      task is to:\n1. Read through the document text provided.\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\n    -
      Each concept is identified by a concept ID (for example, \"C0\", \"C1\", etc.)
      specified within <concept_id></concept_id> tags.\n    - Each concept is described
      by a concept name specified within <concept_name></concept_name> tags and a
      concept description specified within <concept_description></concept_description>
      tags.\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\n4.
      Produce a JSON array containing your extracted data, in the provided format.\n</task_description>\n\n<concept_extraction_rules>\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \"extracted_items\" list. However,
      for boolean concepts (with extracted item type \"bool\"), distinguish carefully:\n    -
      Extract True if the concept is confirmed or strongly supported by the document
      content (either explicitly stated or reasonably inferred)\n    - Extract False
      if the concept is contradicted, denied, or if the document content allows you
      to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\n    - Only leave \"extracted_items\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\n\nFollow these additional
      rules:\n\n- Output format:\n    -- Provide your answer in the JSON format specified
      within <answer_format></answer_format> tags (do not include backticks, code
      fences, or any introductory/explanatory text). Follow this format exactly.\n\n-
      Consistency:\n    -- Each JSON object in the list must have two keys: \"concept_id\"
      and \"extracted_items\".\n    -- The value of \"concept_id\" must match exactly
      the ID of the concept (for example, \"C0\", \"C1\", etc.).\n    -- The value
      of \"extracted_items\" must be an array. If the concept is not addressed or
      there are no items to extract, leave the array empty ([]). For boolean concepts,
      only leave empty if the concept is impossible to determine.\n        --- Extracted
      items may be found directly (explicitly mentioned) or inferred from the content
      (implied or derivable from the information present).\n        --- Guidance regarding
      the possible amount of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \"extracted_items\"
      array.\n</concept_extraction_rules>\n\n<extracted_item_structure>\n- Item structure:\n    --
      All extracted items must match the exact type specified for the concept.\n    --
      If a specific structure is provided for a concept within <expected_structure></expected_structure>
      tags, you must follow that structure for all extracted items corresponding to
      that concept.\n    -- If a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \"extracted_items\" array empty if none of the labels apply to the
      content.\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\n        ---
      Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\n    -- When extracting string values, translate them in English if the
      original language of the document is not English.\n</extracted_item_structure>\n\n<type_validation_rules>\n-
      Types of extracted items:\n    -- Each concept specifies an \"extracted item
      type\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\n    --
      Do not introduce any extra fields or modify the specified structure.\n</type_validation_rules>\n\n<extracted_item_handling_rules>\n-
      Handling missing or multiple items:\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \"extracted_items\" array.\n    -- For boolean concepts (with extracted item
      type \"bool\"): Distinguish carefully between these cases:\n        --- Extract
      True if the concept is confirmed or strongly supported by the provided content
      (either explicitly stated or reasonably inferred)\n        --- Extract False
      if the concept is contradicted, denied, or if the provided content allows you
      to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\n        --- Only leave \"extracted_items\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\n    --
      For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \"extracted_items\" array empty if none of the labels apply to the content.\n    --
      For concepts that have <available_labels></available_labels> tags: if multiple
      labels apply to the same instance or context, include them all in a single extracted
      item with multiple labels in the \"labels\" array (e.g., {\"labels\": [\"label1\",
      \"label2\"]}). Only create multiple extracted items if there are genuinely distinct
      instances or contexts that warrant separate classification.\n    -- For concepts
      that do not have <available_labels></available_labels> tags: if multiple items
      are found for a concept, include each as a separate entry within the \"extracted_items\"
      array.\n</extracted_item_handling_rules>\n\n<output_constraints>\n- No additional
      text:\n    -- Do not include any headers, explanations, or text outside of the
      JSON array.\n    -- Do not wrap your JSON response in backticks or any other
      formatting characters.\n</output_constraints>\n\n<answer_format>\nANSWER FORMAT
      (MANDATORY):\n[\n    {\n        \"concept_id\": str,\n        \"extracted_items:
      [\n            ...\n        ],\n    },\n    ...\n]\n</answer_format>\n\n<concepts>\nCONCEPTS:\n<concept
      id=\"C0\">\n    <concept_id>C0</concept_id>\n    \n    <concept_name>User System
      Profile</concept_name>\n\n    <concept_description>\n    Comprehensive user
      profile with system access permissions and settings\n    </concept_description>\n\n    <expected_structure>\n    {\n  \"user\":
      {\n    \"name\": str,\n    \"age\": int,\n    \"contact\": {\n      \"email\":
      str,\n      \"phone\": str,\n      \"address\": {\n        \"street\": str,\n        \"city\":
      str,\n        \"country\": str\n      },\n      \"contact_type\": \"primary\"
      or \"secondary\" or \"emergency\" or \"union\" or \"literal\" or null\n    }\n  },\n  \"status\":
      \"active\" or \"inactive\",\n  \"permissions\": [\n    {\n      \"resource\":
      str,\n      \"access\": \"read\" or \"write\" or \"admin\"\n    },\n    ...\n  ],\n  \"settings\":
      {\n    \"theme\": str,\n    \"notifications\": {\n      \"email\": bool,\n      \"sms\":
      bool,\n      \"frequency\": \"daily\" or \"weekly\" or \"monthly\"\n    }\n  },\n  \"related_items\":
      [\n    {\n      \"id\": int,\n      \"name\": str,\n      \"description\": str,\n      \"is_active\":
      bool\n    },\n    ...\n  ],\n  \"security_level\": \"Basic\" or \"Advanced\"
      or \"Enterprise\" or null\n}\n    </expected_structure>\n\n    <amount_of_extracted_items>This
      concept may have zero, one, or multiple extracted items.</amount_of_extracted_items>\n\n    <extracted_item_examples>\n        <extracted_item_example>\n        custom_data={}
      content={''user'': {''name'': ''Charlie Davis'', ''age'': 42, ''contact'': {''email'':
      ''charlie@example.com'', ''phone'': ''111-222-3333'', ''address'': {''street'':
      ''101 Maple Dr'', ''city'': ''Nowhere'', ''country'': ''Australia''}, ''contact_type'':
      ''primary''}}, ''status'': ''active'', ''permissions'': [{''resource'': ''files'',
      ''access'': ''read''}, {''resource'': ''users'', ''access'': ''admin''}], ''settings'':
      {''theme'': ''dark'', ''notifications'': {''email'': True, ''sms'': False, ''frequency'':
      ''weekly''}}, ''related_items'': [{''id'': 1, ''name'': ''Document Review'',
      ''description'': ''Annual document review task'', ''is_active'': True}, {''id'':
      2, ''name'': ''Access Audit'', ''description'': ''System access verification'',
      ''is_active'': False}], ''security_level'': ''Advanced''}\n        </extracted_item_example>\n    </extracted_item_examples>\n\n    <extracted_item_type>dict
      (must be exactly as specified)</extracted_item_type>\n</concept>\n\n</concepts>\n\n<document_text>\nSystem
      Profile Information\n===========================\n\nUSER PROFILE\nName: Charlie
      Davis\nAge: 42\nContact Information (primary contact):\n Email: charlie@example.com\n
      Phone: 111-222-3333\n Address: 101 Maple Dr, Nowhere, Australia\n\nACCOUNT STATUS:
      active\n\nSYSTEM PERMISSIONS:\n1. Resource: files\n Access Level: read\n2. Resource:
      users\n Access Level: admin\n3. Resource: settings\n Access Level: write\n\nPREFERENCE
      SETTINGS\nTheme: dark\nNotification Preferences:\n- Email notifications: Enabled\n-
      SMS notifications: Disabled\n- Notification frequency: weekly\n\nLogin History:\n-
      Last login: 2023-12-15\n- Sessions active: 2\n- Device: Mobile, Desktop\n\nRELATED
      ITEMS:\n1. Document Review (ID: 1)\n Description: Annual document review task\n
      Status: Active\n\n2. Access Audit (ID: 2)\n Description: System access verification\n
      Status: Inactive\n\nSecurity Level: Advanced\n2FA: Enabled\n</document_text>\n"}],"model":"gpt-4.1-mini","max_tokens":4096,"stream":false,"temperature":0.3,"top_p":0.3}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '18432'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n  {\n    \"concept_id\": \"C0\",\n    \"extracted_items\":
        [\n      {\n        \"user\": {\n          \"name\": \"Charlie Davis\",\n          \"age\":
        42,\n          \"contact\": {\n            \"email\": \"charlie@example.com\",\n            \"phone\":
        \"111-222-3333\",\n            \"address\": {\n              \"street\": \"101
        Maple Dr\",\n              \"city\": \"Nowhere\",\n              \"country\":
        \"Australia\"\n            },\n            \"contact_type\": \"primary\"\n          }\n        },\n        \"status\":
        \"active\",\n        \"permissions\": [\n          {\n            \"resource\":
        \"files\",\n            \"access\": \"read\"\n          },\n          {\n            \"resource\":
        \"users\",\n            \"access\": \"admin\"\n          },\n          {\n            \"resource\":
        \"settings\",\n            \"access\": \"write\"\n          }\n        ],\n        \"settings\":
        {\n          \"theme\": \"dark\",\n          \"notifications\": {\n            \"email\":
        true,\n            \"sms\": false,\n            \"frequency\": \"weekly\"\n          }\n        },\n        \"related_items\":
        [\n          {\n            \"id\": 1,\n            \"name\": \"Document Review\",\n            \"description\":
        \"Annual document review task\",\n            \"is_active\": true\n          },\n          {\n            \"id\":
        2,\n            \"name\": \"Access Audit\",\n            \"description\":
        \"System access verification\",\n            \"is_active\": false\n          }\n        ],\n        \"security_level\":
        \"Advanced\"\n      }\n    ]\n  }\n]", "refusal": null, "role": "assistant"}}],
        "created": 1755548907, "id": "chatcmpl-DUMMY", "model": "gpt-4.1-mini-2025-04-14",
        "object": "chat.completion", "prompt_filter_results": [{"prompt_index": 0,
        "content_filter_results": {"hate": {"filtered": false, "severity": "safe"},
        "jailbreak": {"filtered": false, "detected": false}, "self_harm": {"filtered":
        false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"},
        "violence": {"filtered": false, "severity": "safe"}}}], "system_fingerprint":
        "fp_4f3d32ad4e", "usage": {"completion_tokens": 314, "completion_tokens_details":
        {"accepted_prediction_tokens": 0, "audio_tokens": 0, "reasoning_tokens": 0,
        "rejected_prediction_tokens": 0}, "prompt_tokens": 3705, "prompt_tokens_details":
        {"audio_tokens": 0, "cached_tokens": 2816}, "total_tokens": 4019}}'
    headers:
      Content-Length:
      - '2803'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
version: 1
