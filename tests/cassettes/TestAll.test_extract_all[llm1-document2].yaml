interactions:
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find a list of consecutively ordered paragraphs from a document and
      a list of aspects.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., aspect_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n\\n1. Read and understand the aspects\\n    - Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.) specified within
      <aspect_id></aspect_id> tags, includes a name specified within <aspect_name></aspect_name>
      tags, and has a description specified within <aspect_description></aspect_description>
      tags.\\n    - Aspects describe themes, topics, or criteria that might be addressed
      in the paragraphs.\\n\\n2. Examine each paragraph\\n    - Each paragraph is
      identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\", etc.) specified
      within <paragraph_id></paragraph_id> tags, followed by the full text of the
      paragraph specified within <paragraph_text></paragraph_text> tags.\\n    - Note
      that paragraphs are listed in the same order they appear in the original document;
      therefore, context from surrounding paragraphs may influence whether a particular
      paragraph is relevant to an aspect.\\n    - You may be working with document
      fragments rather than complete documents. Focus on extracting information from
      the available content without making assumptions about missing parts.\\n\\n3.
      Map paragraphs to aspects\\n    - A paragraph can address one, multiple, or
      none of the aspects.\\n    - If a paragraph clearly relates to an aspect (based
      on the aspect's name and description), include that paragraph's ID under the
      aspect's list of paragraph IDs.\\n    - If a paragraph does not relate to an
      aspect, do not include it under that aspect's list.\\n\\n4. Produce the final
      answer in the JSON format specified within <answer_format></answer_format> tags\\n
      \   - Your output must be a JSON array of objects, each object corresponding
      to a single aspect.\\n    - For each aspect (in the order they are provided),
      include:\\n        -- aspect_id: The aspect's unique identifier, e.g., \\\"A0\\\".\\n
      \       -- paragraph_ids: An array of the paragraph IDs that address or relate
      to the aspect, e.g., [\\\"P0\\\", \\\"P2\\\"].\\n        -- If an aspect has
      no related paragraphs, still include it with an empty paragraph_ids array ([]).\\n-
      Do not add extra commentary, code block markers, or any other formatting beyond
      the JSON array.\\n</task_description>\\n\\n<output_constraints>\\n- No additional
      text:\\n    -- Do not include any headers, explanations, or text outside of
      the JSON array.\\n    -- Do not wrap your JSON response in backticks or any
      other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraph_ids:
      [\\n            str,\\n            ...\\n        ]\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<aspects>\\nDOCUMENT
      ASPECTS:\\n    <aspect id=\\\"A0\\\">\\n        <aspect_id>A0</aspect_id>\\n
      \       \\n        <aspect_name>Term and termination</aspect_name>\\n        \\n
      \       <aspect_description>\\n        All clauses addressing term and termination
      of the contract.\\n        </aspect_description>\\n    </aspect>\\n\\n</aspects>\\n\\n<document_paragraphs>\\nDOCUMENT
      PARAGRAPHS:\\n    <paragraph id=\\\"P0\\\">\\n        <paragraph_id>P0</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P1\\\">\\n
      \       <paragraph_id>P1</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P2\\\">\\n        <paragraph_id>P2</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P3\\\">\\n
      \       <paragraph_id>P3</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P4\\\">\\n        <paragraph_id>P4</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P5\\\">\\n        <paragraph_id>P5</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P6\\\">\\n        <paragraph_id>P6</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P7\\\">\\n
      \       <paragraph_id>P7</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P8\\\">\\n        <paragraph_id>P8</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u043F\u043E\u0448\u0442\u0430: _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P9\\\">\\n        <paragraph_id>P9</paragraph_id>\\n        \\n
      \       <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      B:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P10\\\">\\n
      \       <paragraph_id>P10</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P11\\\">\\n
      \       <paragraph_id>P11</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       5678 \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P12\\\">\\n
      \       <paragraph_id>P12</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u044C\u044E-\u0419\u043E\u0440\u043A, NY 00000\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P13\\\">\\n        <paragraph_id>P13</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443,
      \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P14\\\">\\n
      \       <paragraph_id>P14</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: (012) 345-6789\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P15\\\">\\n        <paragraph_id>P15</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P16\\\">\\n        <paragraph_id>P16</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P17\\\">\\n
      \       <paragraph_id>P17</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041C\u0435\u0442\u043E\u044E \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \u0454 \u0437\u0430\u0445\u0438\u0441\u0442 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P18\\\">\\n
      \       <paragraph_id>P18</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       2. \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P19\\\">\\n        <paragraph_id>P19</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u043B\u044F \u0446\u0456\u043B\u0435\u0439
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P20\\\">\\n
      \       <paragraph_id>P20</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P21\\\">\\n        <paragraph_id>P21</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P22\\\">\\n        <paragraph_id>P22</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P23\\\">\\n
      \       <paragraph_id>P23</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       3. \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P24\\\">\\n        <paragraph_id>P24</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P25\\\">\\n
      \       <paragraph_id>P25</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P26\\\">\\n
      \       <paragraph_id>P26</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P27\\\">\\n
      \       <paragraph_id>P27</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445
      \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445
      \u0437\u0430\u0445\u043E\u0434\u0456\u0432 \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P28\\\">\\n        <paragraph_id>P28</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P29\\\">\\n        <paragraph_id>P29</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P30\\\">\\n
      \       <paragraph_id>P30</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P31\\\">\\n        <paragraph_id>P31</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        b. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P32\\\">\\n
      \       <paragraph_id>P32</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430
      \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445 \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445
      \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457 \u0441\u0442\u043E\u0440\u043E\u043D\u0438
      \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P33\\\">\\n        <paragraph_id>P33</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P34\\\">\\n        <paragraph_id>P34</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        6. \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F
      \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P35\\\">\\n        <paragraph_id>P35</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P36\\\">\\n
      \       <paragraph_id>P36</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       7. \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P37\\\">\\n
      \       <paragraph_id>P37</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0456\u0449\u043E \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456
      \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F
      \u044F\u043A \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P38\\\">\\n        <paragraph_id>P38</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P39\\\">\\n        <paragraph_id>P39</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P40\\\">\\n
      \       <paragraph_id>P40</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0423\u0441\u0456 \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438
      \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F \u0441\u0443\u0434\u0430\u043C\u0438
      \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P41\\\">\\n        <paragraph_id>P41</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        9. \u0420\u0456\u0437\u043D\u0435:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P42\\\">\\n
      \       <paragraph_id>P42</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454
      \u0441\u043E\u0431\u043E\u044E \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P43\\\">\\n
      \       <paragraph_id>P43</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P44\\\">\\n
      \       <paragraph_id>P44</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435
      \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435 \u0432\u0438\u0437\u043D\u0430\u043D\u043E
      \u0442\u0430\u043A\u0438\u043C, \u0449\u043E \u043D\u0435 \u043C\u0430\u0454
      \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457 \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430
      \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430
      \u044F\u043A\u043E\u043C\u043E\u0433\u0430 \u043F\u043E\u0432\u043D\u0456\u0448\u0435,
      \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F, \u044F\u043A\u0435
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P45\\\">\\n        <paragraph_id>P45</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P46\\\">\\n
      \       <paragraph_id>P46</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0410 \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F
      \u0427\u041E\u0413\u041E \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P47\\\">\\n        <paragraph_id>P47</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P48\\\">\\n        <paragraph_id>P48</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P49\\\">\\n        <paragraph_id>P49</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: _____\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P50\\\">\\n
      \       <paragraph_id>P50</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0430\u0437\u0432\u0430: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P51\\\">\\n        <paragraph_id>P51</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P52\\\">\\n
      \       <paragraph_id>P52</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P53\\\">\\n
      \       <paragraph_id>P53</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0410\u0432\u0442\u043E\u0440: ___________________________\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P54\\\">\\n        <paragraph_id>P54</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P55\\\">\\n        <paragraph_id>P55</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P56\\\">\\n        <paragraph_id>P56</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n</document_paragraphs>\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '30778'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n  {\n    \"aspect_id\":
        \"A0\",\n    \"paragraph_ids\": [\n      \"P35\",\n      \"P40\"\n    ]\n  }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549459, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 34,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        6032, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 6016},
        "total_tokens": 6066}}'
    headers:
      Content-Length:
      - '1201'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find a list of consecutively ordered paragraphs from a document and
      a list of aspects.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., aspect_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n\\n1. Read and understand the aspects\\n    - Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.) specified within
      <aspect_id></aspect_id> tags, includes a name specified within <aspect_name></aspect_name>
      tags, and has a description specified within <aspect_description></aspect_description>
      tags.\\n    - Aspects describe themes, topics, or criteria that might be addressed
      in the paragraphs.\\n\\n2. Examine each paragraph\\n    - Each paragraph is
      identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\", etc.) specified
      within <paragraph_id></paragraph_id> tags, followed by the full text of the
      paragraph specified within <paragraph_text></paragraph_text> tags.\\n    - Note
      that paragraphs are listed in the same order they appear in the original document;
      therefore, context from surrounding paragraphs may influence whether a particular
      paragraph is relevant to an aspect.\\n    - You may be working with document
      fragments rather than complete documents. Focus on extracting information from
      the available content without making assumptions about missing parts.\\n\\n3.
      Map paragraphs to aspects\\n    - A paragraph can address one, multiple, or
      none of the aspects.\\n    - If a paragraph clearly relates to an aspect (based
      on the aspect's name and description), include the paragraph's ID and provide
      a justification, detailing why the paragraph is relevant to the aspect.\\n    -
      If a paragraph does not relate to an aspect, do not include it under that aspect's
      list.\\n\\n4. Produce the final answer in the JSON format specified within <answer_format></answer_format>
      tags\\n    - Your output must be a JSON array of objects, each object corresponding
      to a single aspect.\\n    - For each aspect (in the order they are provided),
      include:\\n        -- aspect_id: The aspect's unique identifier, e.g., \\\"A0\\\".\\n
      \       -- paragraphs: An array of objects for each paragraph that addresses
      or relates to the aspect. Each object should include:\\n            --- paragraph_id:
      The provided paragraph ID, e.g., \\\"P0\\\", \\\"P2\\\".\\n            --- justification:
      A justification of why the paragraph is relevant to the aspect. Ensure the justification
      is specific and directly ties the content of the paragraph to the aspect's defining
      features. Never reference any of the structural IDs provided in this prompt
      (such as aspect IDs like \\\"A0\\\", or paragraph IDs like \\\"P0\\\") in the
      justification.\\n                ---- Justification should be brief, i.e. highlight
      only the essential details.\\n                ---- Justification should be no
      longer than 2 sentences.\\n                ---- Justification should be in the
      original language of the document.\\n        -- If an aspect has no related
      paragraphs, still include it with an empty paragraphs array ([]).\\n- Do not
      add extra commentary, code block markers, or any other formatting beyond the
      JSON array.\\n</task_description>\\n\\n<output_constraints>\\n- No additional
      text:\\n    -- Do not include any headers, explanations, or text outside of
      the JSON array.\\n    -- Do not wrap your JSON response in backticks or any
      other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraphs:
      [\\n            {\\n                \\\"paragraph_id\\\": str,\\n                \\\"justification\\\":
      str\\n            },\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<aspects>\\nDOCUMENT
      ASPECTS:\\n    <aspect id=\\\"A0\\\">\\n        <aspect_id>A0</aspect_id>\\n
      \       \\n        <aspect_name>Parties</aspect_name>\\n        \\n        <aspect_description>\\n
      \       Parties to the agreement\\n        </aspect_description>\\n    </aspect>\\n\\n</aspects>\\n\\n<document_paragraphs>\\nDOCUMENT
      PARAGRAPHS:\\n    <paragraph id=\\\"P0\\\">\\n        <paragraph_id>P0</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P1\\\">\\n
      \       <paragraph_id>P1</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P2\\\">\\n        <paragraph_id>P2</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P3\\\">\\n
      \       <paragraph_id>P3</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P4\\\">\\n        <paragraph_id>P4</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P5\\\">\\n        <paragraph_id>P5</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P6\\\">\\n        <paragraph_id>P6</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P7\\\">\\n
      \       <paragraph_id>P7</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P8\\\">\\n        <paragraph_id>P8</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u043F\u043E\u0448\u0442\u0430: _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P9\\\">\\n        <paragraph_id>P9</paragraph_id>\\n        \\n
      \       <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      B:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P10\\\">\\n
      \       <paragraph_id>P10</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P11\\\">\\n
      \       <paragraph_id>P11</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       5678 \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P12\\\">\\n
      \       <paragraph_id>P12</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u044C\u044E-\u0419\u043E\u0440\u043A, NY 00000\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P13\\\">\\n        <paragraph_id>P13</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443,
      \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P14\\\">\\n
      \       <paragraph_id>P14</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: (012) 345-6789\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P15\\\">\\n        <paragraph_id>P15</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P16\\\">\\n        <paragraph_id>P16</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P17\\\">\\n
      \       <paragraph_id>P17</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041C\u0435\u0442\u043E\u044E \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \u0454 \u0437\u0430\u0445\u0438\u0441\u0442 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P18\\\">\\n
      \       <paragraph_id>P18</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       2. \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P19\\\">\\n        <paragraph_id>P19</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u043B\u044F \u0446\u0456\u043B\u0435\u0439
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P20\\\">\\n
      \       <paragraph_id>P20</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P21\\\">\\n        <paragraph_id>P21</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P22\\\">\\n        <paragraph_id>P22</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P23\\\">\\n
      \       <paragraph_id>P23</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       3. \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P24\\\">\\n        <paragraph_id>P24</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P25\\\">\\n
      \       <paragraph_id>P25</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P26\\\">\\n
      \       <paragraph_id>P26</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P27\\\">\\n
      \       <paragraph_id>P27</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445
      \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445
      \u0437\u0430\u0445\u043E\u0434\u0456\u0432 \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P28\\\">\\n        <paragraph_id>P28</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P29\\\">\\n        <paragraph_id>P29</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P30\\\">\\n
      \       <paragraph_id>P30</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P31\\\">\\n        <paragraph_id>P31</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        b. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P32\\\">\\n
      \       <paragraph_id>P32</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430
      \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445 \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445
      \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457 \u0441\u0442\u043E\u0440\u043E\u043D\u0438
      \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P33\\\">\\n        <paragraph_id>P33</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P34\\\">\\n        <paragraph_id>P34</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        6. \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F
      \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P35\\\">\\n        <paragraph_id>P35</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P36\\\">\\n
      \       <paragraph_id>P36</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       7. \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P37\\\">\\n
      \       <paragraph_id>P37</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0456\u0449\u043E \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456
      \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F
      \u044F\u043A \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P38\\\">\\n        <paragraph_id>P38</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P39\\\">\\n        <paragraph_id>P39</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P40\\\">\\n
      \       <paragraph_id>P40</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0423\u0441\u0456 \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438
      \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F \u0441\u0443\u0434\u0430\u043C\u0438
      \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P41\\\">\\n        <paragraph_id>P41</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        9. \u0420\u0456\u0437\u043D\u0435:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P42\\\">\\n
      \       <paragraph_id>P42</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454
      \u0441\u043E\u0431\u043E\u044E \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P43\\\">\\n
      \       <paragraph_id>P43</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P44\\\">\\n
      \       <paragraph_id>P44</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435
      \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435 \u0432\u0438\u0437\u043D\u0430\u043D\u043E
      \u0442\u0430\u043A\u0438\u043C, \u0449\u043E \u043D\u0435 \u043C\u0430\u0454
      \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457 \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430
      \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430
      \u044F\u043A\u043E\u043C\u043E\u0433\u0430 \u043F\u043E\u0432\u043D\u0456\u0448\u0435,
      \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F, \u044F\u043A\u0435
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P45\\\">\\n        <paragraph_id>P45</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P46\\\">\\n
      \       <paragraph_id>P46</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0410 \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F
      \u0427\u041E\u0413\u041E \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P47\\\">\\n        <paragraph_id>P47</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P48\\\">\\n        <paragraph_id>P48</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P49\\\">\\n        <paragraph_id>P49</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: _____\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P50\\\">\\n
      \       <paragraph_id>P50</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0430\u0437\u0432\u0430: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P51\\\">\\n        <paragraph_id>P51</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P52\\\">\\n
      \       <paragraph_id>P52</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P53\\\">\\n
      \       <paragraph_id>P53</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0410\u0432\u0442\u043E\u0440: ___________________________\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P54\\\">\\n        <paragraph_id>P54</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P55\\\">\\n        <paragraph_id>P55</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P56\\\">\\n        <paragraph_id>P56</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n</document_paragraphs>\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '31575'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n  {\n    \"aspect_id\": \"A0\",\n    \"paragraphs\": [\n      {\n        \"paragraph_id\":
        \"P1\",\n        \"justification\": \"\u0426\u0435\u0439 \u0430\u0431\u0437\u0430\u0446
        \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u0443\u043a\u043b\u0430\u0434\u0435\u043d\u043d\u044f
        \u0443\u0433\u043e\u0434\u0438 \u0442\u0430 \u0432\u043a\u0430\u0437\u0443\u0454,
        \u0449\u043e \u0443\u0433\u043e\u0434\u0430 \u0443\u043a\u043b\u0430\u0434\u0435\u043d\u0430
        \u043c\u0456\u0436 \u0441\u0442\u043e\u0440\u043e\u043d\u0430\u043c\u0438,
        \u0449\u043e \u0454 \u043f\u043e\u0447\u0430\u0442\u043a\u043e\u043c \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d.\"\n      },\n      {\n        \"paragraph_id\":
        \"P2\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u043d\u0430 \u043f\u0435\u0440\u0448\u0443 \u0441\u0442\u043e\u0440\u043e\u043d\u0443
        \u0443\u0433\u043e\u0434\u0438, \u043f\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0443
        \u044f\u043a \u0421\u0442\u043e\u0440\u043e\u043d\u0430 \u0410, \u0449\u043e
        \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d.\"\n      },\n      {\n        \"paragraph_id\":
        \"P3\",\n        \"justification\": \"\u041f\u043e\u0440\u043e\u0436\u043d\u0454
        \u043c\u0456\u0441\u0446\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u0432\u043d\u0435\u043d\u043d\u044f
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457 \u043f\u0440\u043e
        \u0421\u0442\u043e\u0440\u043e\u043d\u0443 \u0410, \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P4\",\n        \"justification\": \"\u041f\u043e\u0440\u043e\u0436\u043d\u0454
        \u043c\u0456\u0441\u0446\u0435 \u0434\u043b\u044f \u0434\u043e\u0434\u0430\u0442\u043a\u043e\u0432\u043e\u0457
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457 \u043f\u0440\u043e
        \u0421\u0442\u043e\u0440\u043e\u043d\u0443 \u0410, \u0449\u043e \u0432\u0456\u0434\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f
        \u0434\u043e \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P5\",\n        \"justification\": \"\u0429\u0435 \u043e\u0434\u043d\u0435
        \u043f\u043e\u0440\u043e\u0436\u043d\u0454 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457 \u043f\u0440\u043e
        \u0421\u0442\u043e\u0440\u043e\u043d\u0443 \u0410, \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P6\",\n        \"justification\": \"\u041d\u0430\u0434\u0430\u0454 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u0443
        \u043e\u0441\u043e\u0431\u0443 \u0434\u043b\u044f \u0421\u0442\u043e\u0440\u043e\u043d\u0438
        \u0410, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e
        \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P7\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440
        \u0434\u043b\u044f \u0421\u0442\u043e\u0440\u043e\u043d\u0438 \u0410, \u0449\u043e
        \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0438
        \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P8\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443 \u043f\u043e\u0448\u0442\u0443
        \u0434\u043b\u044f \u0421\u0442\u043e\u0440\u043e\u043d\u0438 \u0410, \u0449\u043e
        \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u043e\u0457
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P9\",\n        \"justification\": \"\u0412\u0438\u0437\u043d\u0430\u0447\u0430\u0454
        \u0434\u0440\u0443\u0433\u0443 \u0441\u0442\u043e\u0440\u043e\u043d\u0443
        \u0443\u0433\u043e\u0434\u0438 \u044f\u043a \u0421\u0442\u043e\u0440\u043e\u043d\u0430
        B, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d.\"\n      },\n      {\n        \"paragraph_id\":
        \"P10\",\n        \"justification\": \"\u041d\u0430\u0434\u0430\u0454 \u043d\u0430\u0437\u0432\u0443
        \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438
        \u0443\u0433\u043e\u0434\u0438 \u2014 \u0422\u041e\u0412 \u00ab\u041f\u0440\u0438\u043a\u043b\u0430\u0434.\u041a\u043e\u043c\u00bb,
        \u0449\u043e \u0454 \u043a\u043b\u044e\u0447\u043e\u0432\u043e\u044e \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0454\u044e
        \u043f\u0440\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P11\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e
        \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P12\",\n        \"justification\": \"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0443\u0454
        \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0432\u0456\u0434\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f
        \u0434\u043e \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P13\",\n        \"justification\": \"\u041d\u0430\u0434\u0430\u0454 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u0443
        \u043e\u0441\u043e\u0431\u0443 \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P14\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438 \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P15\",\n        \"justification\": \"\u041d\u0430\u0434\u0430\u0454 \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443
        \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e
        \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u043e\u0457 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P45\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454,
        \u0449\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u0430, \u0449\u043e \u0440\u043e\u0437\u043a\u0440\u0438\u0432\u0430\u0454
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e, \u043c\u0430\u0454
        \u0431\u0443\u0442\u0438 \u043d\u0430\u043b\u0435\u0436\u043d\u043e\u044e
        \u043e\u0441\u043e\u0431\u043e\u044e \u0434\u043b\u044f \u0432\u0438\u043a\u043e\u043d\u0430\u043d\u043d\u044f
        \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0443, \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P46\",\n        \"justification\": \"\u041f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0443\u0454
        \u0443\u043a\u043b\u0430\u0434\u0435\u043d\u043d\u044f \u0443\u0433\u043e\u0434\u0438
        \u043c\u0456\u0436 \u0441\u0442\u043e\u0440\u043e\u043d\u0430\u043c\u0438
        \u043d\u0430 \u0437\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0443 \u0434\u0430\u0442\u0443,
        \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P48\",\n        \"justification\": \"\u041c\u0456\u0441\u0442\u0438\u0442\u044c
        \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0443
        \u0430\u0432\u0442\u043e\u0440\u0430, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e
        \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P49\",\n        \"justification\": \"\u041f\u043e\u043b\u0435 \u0434\u043b\u044f
        \u0456\u043c\u0435\u043d\u0456 \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u0442\u0430,
        \u0449\u043e \u0432\u0456\u0434\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f
        \u0434\u043e \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P50\",\n        \"justification\": \"\u041f\u043e\u043b\u0435 \u0434\u043b\u044f
        \u043d\u0430\u0437\u0432\u0438 \u043f\u043e\u0441\u0430\u0434\u0438 \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u0442\u0430,
        \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P51\",\n        \"justification\": \"\u041f\u043e\u043b\u0435 \u0434\u043b\u044f
        \u0434\u0430\u0442\u0438 \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f,
        \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P52\",\n        \"justification\": \"\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u0430
        \u0437\u0433\u0430\u0434\u043a\u0430 \u0422\u041e\u0412 \u00ab\u041f\u0440\u0438\u043a\u043b\u0430\u0434.\u041a\u043e\u043c\u00bb,
        \u0449\u043e \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0443\u0454
        \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u044e
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P53\",\n        \"justification\": \"\u041f\u043e\u043b\u0435 \u0434\u043b\u044f
        \u043f\u0456\u0434\u043f\u0438\u0441\u0443 \u0430\u0432\u0442\u043e\u0440\u0430
        \u0432\u0456\u0434 \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P54\",\n        \"justification\": \"\u0406\u043c''\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u0442\u0430
        \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0432\u0456\u0434\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f
        \u0434\u043e \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P55\",\n        \"justification\": \"\u041f\u043e\u0441\u0430\u0434\u0430
        \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u0442\u0430 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P56\",\n        \"justification\": \"\u041f\u043e\u043b\u0435 \u0434\u043b\u044f
        \u0434\u0430\u0442\u0438 \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f
        \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      }\n    ]\n  }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549460, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 1186,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        6173, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 6144},
        "total_tokens": 7359}}'
    headers:
      Content-Length:
      - '7197'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Contract
      term</concept_name>\\n\\n    <concept_description>\\n    Contract term\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>str
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '16181'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"5 (\u043f\u2019\u044f\u0442\u0438)
        \u0440\u043e\u043a\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438 \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f
        \u0446\u044c\u043e\u0433\u043e \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0443\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549474, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 44,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3118, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 3072},
        "total_tokens": 3162}}'
    headers:
      Content-Length:
      - '1294'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find a list of document paragraphs (including sentences) and a list
      of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll structured
      information in these instructions is provided using semantic XML tags. Field
      names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the provided document paragraphs and their sentences.\\n
      \   - Each paragraph is identified by a paragraph ID (for example, \\\"P0\\\",
      \\\"P1\\\", etc.) specified within <paragraph_id></paragraph_id> tags.\\n    -
      Each paragraph includes sentences, each identified by a sentence ID (for example,
      \\\"P0-S0\\\", \\\"P0-S1\\\", etc.) specified within <sentence_id></sentence_id>
      tags, followed by the full text of the sentence specified within <sentence_text></sentence_text>
      tags.\\n    - Note that paragraphs are listed in the same order they appear
      in the original document.\\n    - You may be working with document fragments
      rather than complete documents. Focus on extracting information from the available
      content without making assumptions about missing parts.\\n2. Identify whether
      each concept in the concepts list is addressed within the document paragraphs.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document paragraphs, you must still include
      an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list. However, for boolean concepts (with extracted item type \\\"bool\\\"),
      distinguish carefully:\\n    - Extract True if the concept is confirmed or strongly
      supported by the document content (either explicitly stated or reasonably inferred)\\n
      \   - Extract False if the concept is contradicted, denied, or if the document
      content allows you to determine that the concept is not true (e.g., absence
      of expected content that should be present if the concept were true)\\n    -
      Only leave \\\"extracted_items\\\" empty if the concept is impossible to determine
      because either: (1) the document is completely irrelevant to the concept, or
      (2) the document does not contain enough information to make a conclusion about
      the concept\\n\\nFollow these additional rules:\\n\\n- Output format:\\n    --
      Provide your answer in the JSON format specified within <answer_format></answer_format>
      tags (do not include backticks, code fences, or any introductory/explanatory
      text). Follow this format exactly.\\n\\n- Consistency:\\n    -- Each JSON object
      in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array of objects with mandatory fields \\\"value\\\", \\\"justification\\\",
      and \\\"reference_paragraphs\\\". If the concept is not addressed or there are
      no items to extract, leave the array empty ([]). For boolean concepts, only
      leave empty if the concept is impossible to determine.\\n        --- Extracted
      items may be found directly (explicitly mentioned) or inferred from the content
      (implied or derivable from the information present).\\n        --- Guidance
      regarding the possible amount of extracted items for the concept is specified
      within <amount_of_extracted_items></amount_of_extracted_items> tags. Each extracted
      item's object, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n        --- The value of \\\"reference_paragraphs\\\" must be an array
      of objects with mandatory fields \\\"reference_paragraph_id\\\", which holds
      the provided ID of the reference paragraph, and \\\"reference_sentence_ids\\\",
      which holds the provided IDs of the reference sentences within the paragraph.
      Note that not every sentence in the paragraph necessarily serves as a relevant
      reference.\\n</concept_extraction_rules>\\n\\n<extracted_item_object_structure>\\n-
      Item object structure:\\n    -- value: Mandatory field holding the extracted
      item. Must match the exact type specified for the concept.\\n        --- If
      a specific structure is provided for a concept within <expected_structure></expected_structure>
      tags, the extracted item value must follow that structure for all extracted
      items corresponding to that concept.\\n        --- If a rating scale is provided
      for a concept within <rating_scale></rating_scale> tags, the extracted item
      value must be within that scale.\\n        --- If available labels are provided
      for a concept within <available_labels></available_labels> tags, the extracted
      item value must be a list containing only labels from the predefined set. The
      classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n        --- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, the extracted item value should follow the same style and formatting.\\n
      \           ---- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n        --- When extracting string values, retain them in the original
      language of the document without translating them.\\n    -- justification: Mandatory
      field holding a justification of why the item was extracted for the concept.
      Ensure the justification is specific and directly ties the extracted item to
      the concept's defining features. Never reference the concept's ID or any of
      the structural IDs provided in this prompt (such as paragraph IDs like \\\"P0\\\",
      or sentence IDs like \\\"P0-S0\\\") in the justification.\\n        --- Justification
      should be brief, i.e. highlight only the essential details.\\n        --- Justification
      should be no longer than 2 sentences.\\n        --- Justification should be
      in the original language of the document.\\n    -- reference_paragraphs: An
      array of objects for each paragraph based on which the item was extracted for
      the concept. Each object should include:\\n        --- reference_paragraph_id:
      Mandatory field holding the provided ID of the reference paragraph. Each paragraph
      ID must match exactly the provided ID for the paragraph (for example, \\\"P0\\\",
      \\\"P1\\\", etc.).\\n        --- reference_sentence_ids: Mandatory field holding
      an array of the provided IDs of the sentences within the paragraph, based on
      which the item was extracted for the concept. Each sentence ID must match exactly
      the provided ID for the sentence (for example, \\\"P0-S0\\\", \\\"P0-S2\\\",
      etc.).\\n</extracted_item_object_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure that
      the value of each of the extracted items for the concept strictly matches that
      type. Python types are provided (e.g., str for string, int for integer, float
      for floating-point number, dict for object, etc.). Type compliance is mandatory
      - any deviation will result in invalid output.\\n    -- Do not introduce any
      extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            {\\n                \\\"value\\\": ...,\\n                \\\"justification\\\":
      str,\\n                \\\"reference_paragraphs\\\": [\\n                    {\\n
      \                       \\\"reference_paragraph_id\\\": str,\\n                        \\\"reference_sentence_ids\\\":
      [\\n                            str,\\n                            ...\\n                        ]\\n
      \                   },\\n                    ...\\n                ]\\n            },\\n
      \           ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Duration</concept_name>\\n\\n
      \   <concept_description>\\n    Contract duration in years\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>int
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_paragraphs>\\nDOCUMENT
      PARAGRAPHS INCLUDING SENTENCES:\\n    <paragraph id=\\\"P0\\\">\\n        <paragraph_id>P0</paragraph_id>\\n
      \       \\n        <paragraph_sentences>\\n            <sentence id=\\\"P0-S0\\\">\\n
      \               <sentence_id>P0-S0</sentence_id>\\n                \\n                <sentence_text>\\n
      \               \u041F\u0456\u0441\u043B\u044F \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F
      \u0434\u0456\u0457 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E
      \u0437\u0430 \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \               </sentence_text>\\n            </sentence>\\n        </paragraph_sentences>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P1\\\">\\n        <paragraph_id>P1</paragraph_id>\\n
      \       \\n        <paragraph_sentences>\\n            <sentence id=\\\"P1-S0\\\">\\n
      \               <sentence_id>P1-S0</sentence_id>\\n                \\n                <sentence_text>\\n
      \               \u0423\u0441\u0456 \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438
      \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F \u0441\u0443\u0434\u0430\u043C\u0438
      \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.\\n
      \               </sentence_text>\\n            </sentence>\\n            <sentence
      id=\\\"P1-S1\\\">\\n                <sentence_id>P1-S1</sentence_id>\\n                \\n
      \               <sentence_text>\\n                \u0414\u043E\u0433\u043E\u0432\u0456\u0440
      \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C 5 (\u043F\u2019\u044F\u0442\u0438)
      \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n
      \               </sentence_text>\\n            </sentence>\\n        </paragraph_sentences>\\n
      \   </paragraph>\\n\\n</document_paragraphs>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '20339'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n    {\n        \"concept_id\": \"C0\",\n        \"extracted_items\":
        [\n            {\n                \"value\": 5,\n                \"justification\":
        \"\u0414\u043e\u0433\u043e\u0432\u0456\u0440 \u0434\u0456\u0454 \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c
        5 (\u043f\u2019\u044f\u0442\u0438) \u0440\u043e\u043a\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
        \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u0446\u044c\u043e\u0433\u043e
        \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0443, \u0449\u043e \u0432\u043a\u0430\u0437\u0443\u0454
        \u043d\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c
        \u0443 5 \u0440\u043e\u043a\u0456\u0432.\",\n                \"reference_paragraphs\":
        [\n                    {\n                        \"reference_paragraph_id\":
        \"P1\",\n                        \"reference_sentence_ids\": [\n                            \"P1-S1\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549475, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 124,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3892, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 3840},
        "total_tokens": 4016}}'
    headers:
      Content-Length:
      - '1897'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Contract
      party name</concept_name>\\n\\n    <concept_description>\\n    Contract party
      name in the contract. Exclude information on individual signatories.\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>str
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n<concept
      id=\\\"C1\\\">\\n    <concept_id>C1</concept_id>\\n    \\n    <concept_name>Contract
      party name and role</concept_name>\\n\\n    <concept_description>\\n    Contract
      party name and role in the contract. Exclude information on individual signatories.\\n
      \   </concept_description>\\n\\n    <amount_of_extracted_items>This concept
      may have zero, one, or multiple extracted items.</amount_of_extracted_items>\\n\\n
      \   <extracted_item_examples>\\n        <extracted_item_example>\\n        custom_data={}
      content='Company ABC (Supplier)'\\n        </extracted_item_example>\\n    </extracted_item_examples>\\n\\n
      \   <extracted_item_type>str (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0426\u044E
      \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n_____\\n\\n_____\\n\\n_____\\n\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: _____\\n\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      _____\\n\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430 \u043F\u043E\u0448\u0442\u0430:
      _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430 B:\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\nd. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n\\n\u041D\u0410
      \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F \u0427\u041E\u0413\u041E
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n\\n\u0410\u0432\u0442\u043E\u0440: ___________________________\\n\\n\u0406\u043C'\u044F:
      _____\\n\\n\u041D\u0430\u0437\u0432\u0430: _____\\n\\n\u0414\u0430\u0442\u0430:
      ___________________________\\n\\n\u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\\n\u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n\\n\u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n\\n\u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\\n\u0414\u0430\u0442\u0430: ___________________________\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '17644'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n  {\n    \"concept_id\":
        \"C0\",\n    \"extracted_items\": [\n      \"\u0422\u041e\u0412 \u00ab\u041f\u0440\u0438\u043a\u043b\u0430\u0434.\u041a\u043e\u043c\u00bb\"\n    ]\n  },\n  {\n    \"concept_id\":
        \"C1\",\n    \"extracted_items\": [\n      \"\u0422\u041e\u0412 \u00ab\u041f\u0440\u0438\u043a\u043b\u0430\u0434.\u041a\u043e\u043c\u00bb
        (\u0421\u0442\u043e\u0440\u043e\u043d\u0430 B)\"\n    ]\n  }\n]", "refusal":
        null, "role": "assistant"}}], "created": 1755549478, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 74,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3431, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 3200},
        "total_tokens": 3505}}'
    headers:
      Content-Length:
      - '1355'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Title</concept_name>\\n\\n
      \   <concept_description>\\n    Contract title\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>str
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n<concept
      id=\\\"C1\\\">\\n    <concept_id>C1</concept_id>\\n    \\n    <concept_name>Key
      aspects</concept_name>\\n\\n    <concept_description>\\n    Names of key aspects
      covered in the document\\n    </concept_description>\\n\\n    <expected_structure>\\n
      \   {\\n  \\\"aspect_names\\\": [\\n    str,\\n    ...\\n  ]\\n}\\n    </expected_structure>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>dict
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n\\n\u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n_____\\n_____\\n_____\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: _____\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      _____\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430 \u043F\u043E\u0448\u0442\u0430:
      _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430 B:\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n\\n\u041C\u0435\u0442\u043E\u044E
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0454 \u0437\u0430\u0445\u0438\u0441\u0442
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n\\n2.
      \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u0414\u043B\u044F
      \u0446\u0456\u043B\u0435\u0439 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n\u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n\\n3.
      \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n\\na.
      \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\nb.
      \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n\\n\u0432.
      \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445 \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445
      \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445 \u0437\u0430\u0445\u043E\u0434\u0456\u0432
      \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n\\na.
      \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n\\nb. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n\\n\u0432.
      \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430 \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445
      \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445 \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438.\\n\\nd. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n6.
      \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n7.
      \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n\\n\u041D\u0456\u0449\u043E
      \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F \u044F\u043A
      \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n\\n8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n\\n\u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n\\n9. \u0420\u0456\u0437\u043D\u0435:\\n\\na.
      \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454 \u0441\u043E\u0431\u043E\u044E
      \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443 \u043C\u0456\u0436
      \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n\\nb.
      \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n\\n\u0432.
      \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435
      \u0432\u0438\u0437\u043D\u0430\u043D\u043E \u0442\u0430\u043A\u0438\u043C, \u0449\u043E
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430 \u043C\u0430\u0454
      \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430 \u044F\u043A\u043E\u043C\u043E\u0433\u0430
      \u043F\u043E\u0432\u043D\u0456\u0448\u0435, \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F,
      \u044F\u043A\u0435 \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n\\nd. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n\\n\u041D\u0410
      \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F \u0427\u041E\u0413\u041E
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n\\n_____\\n\u0410\u0432\u0442\u043E\u0440: ___________________________\\n\u0406\u043C'\u044F:
      _____\\n\u041D\u0430\u0437\u0432\u0430: _____\\n\u0414\u0430\u0442\u0430: ___________________________\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n\u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n\u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0414\u0430\u0442\u0430: ___________________________\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '26924'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n  {\n    \"concept_id\": \"C0\",\n    \"extracted_items\":
        [\n      \"\u0423\u0433\u043e\u0434\u0430 \u043f\u0440\u043e \u043d\u0435\u0440\u043e\u0437\u0433\u043e\u043b\u043e\u0448\u0435\u043d\u043d\u044f
        (NDA)\"\n    ]\n  },\n  {\n    \"concept_id\": \"C1\",\n    \"extracted_items\":
        [\n      {\n        \"aspect_names\": [\n          \"\u041f\u0440\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\",\n          \"\u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f
        \u043a\u043e\u043d\u0444\u0456\u0434\u0435\u043d\u0446\u0456\u0439\u043d\u043e\u0457
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457\",\n          \"\u041e\u0431\u043e\u0432''\u044f\u0437\u043a\u0438
        \u043f\u0440\u0438\u0439\u043c\u0430\u044e\u0447\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438\",\n          \"\u0412\u0438\u043d\u044f\u0442\u043a\u0438
        \u0437 \u043a\u043e\u043d\u0444\u0456\u0434\u0435\u043d\u0446\u0456\u0439\u043d\u043e\u0457
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457\",\n          \"\u041f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f
        \u043c\u0430\u0442\u0435\u0440\u0456\u0430\u043b\u0456\u0432\",\n          \"\u0411\u0435\u0437
        \u043b\u0456\u0446\u0435\u043d\u0437\u0456\u0457\",\n          \"\u0417\u0430\u0441\u0442\u043e\u0441\u043e\u0432\u043d\u0435
        \u0437\u0430\u043a\u043e\u043d\u043e\u0434\u0430\u0432\u0441\u0442\u0432\u043e
        \u0442\u0430 \u0441\u043f\u043e\u0440\u0438\",\n          \"\u0420\u0456\u0437\u043d\u0435\"\n        ]\n      }\n    ]\n  }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549479, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 160,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        5121, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 4992},
        "total_tokens": 5281}}'
    headers:
      Content-Length:
      - '1979'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array of objects with mandatory fields \\\"value\\\" and \\\"justification\\\".
      If the concept is not addressed or there are no items to extract, leave the
      array empty ([]). For boolean concepts, only leave empty if the concept is impossible
      to determine.\\n        --- Extracted items may be found directly (explicitly
      mentioned) or inferred from the content (implied or derivable from the information
      present).\\n        --- Guidance regarding the possible amount of extracted
      items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item's object, even if there is only one, must be part
      of the \\\"extracted_items\\\" array.\\n</concept_extraction_rules>\\n\\n<extracted_item_object_structure>\\n-
      Item object structure:\\n    -- value: Mandatory field holding the extracted
      item. Must match the exact type specified for the concept.\\n        --- If
      a specific structure is provided for a concept within <expected_structure></expected_structure>
      tags, the extracted item value must follow that structure for all extracted
      items corresponding to that concept.\\n        --- If a rating scale is provided
      for a concept within <rating_scale></rating_scale> tags, the extracted item
      value must be within that scale.\\n        --- If available labels are provided
      for a concept within <available_labels></available_labels> tags, the extracted
      item value must be a list containing only labels from the predefined set. The
      classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n        --- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, the extracted item value should follow the same style and formatting.\\n
      \           ---- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n        --- When extracting string values, retain them in the original
      language of the document without translating them.\\n    -- justification: Mandatory
      field holding a justification of why the item was extracted for the concept.
      Ensure the justification is specific and directly ties the extracted item to
      the concept's defining features. Never reference the concept's ID or any of
      the structural IDs provided in this prompt (such as paragraph IDs like \\\"P0\\\",
      or sentence IDs like \\\"P0-S0\\\") in the justification.\\n        --- Justification
      should be brief, i.e. highlight only the essential details.\\n        --- Justification
      should be no longer than 2 sentences.\\n        --- Justification should be
      in the original language of the document.\\n</extracted_item_object_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure that
      the value of each of the extracted items for the concept strictly matches that
      type. Python types are provided (e.g., str for string, int for integer, float
      for floating-point number, dict for object, etc.). Type compliance is mandatory
      - any deviation will result in invalid output.\\n    -- Do not introduce any
      extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            {\\n                \\\"value\\\": ...,\\n                \\\"justification\\\":
      str\\n            },\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Start
      date</concept_name>\\n\\n    <concept_description>\\n    Contract start date\\n
      \   </concept_description>\\n\\n    <amount_of_extracted_items>This concept
      may have zero, one, or multiple extracted items.</amount_of_extracted_items>\\n\\n
      \   <extracted_item_type>str (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n\\n\u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n_____\\n_____\\n_____\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: _____\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      _____\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430 \u043F\u043E\u0448\u0442\u0430:
      _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430 B:\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n\\n\u041C\u0435\u0442\u043E\u044E
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0454 \u0437\u0430\u0445\u0438\u0441\u0442
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n\\n2.
      \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u0414\u043B\u044F
      \u0446\u0456\u043B\u0435\u0439 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n\u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n\\n3.
      \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n\\na.
      \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\nb.
      \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n\\n\u0432.
      \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445 \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445
      \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445 \u0437\u0430\u0445\u043E\u0434\u0456\u0432
      \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n\\na.
      \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n\\nb. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n\\n\u0432.
      \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430 \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445
      \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445 \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438.\\n\\nd. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n6.
      \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n7.
      \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n\\n\u041D\u0456\u0449\u043E
      \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F \u044F\u043A
      \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n\\n8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n\\n\u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n\\n9. \u0420\u0456\u0437\u043D\u0435:\\n\\na.
      \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454 \u0441\u043E\u0431\u043E\u044E
      \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443 \u043C\u0456\u0436
      \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n\\nb.
      \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n\\n\u0432.
      \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435
      \u0432\u0438\u0437\u043D\u0430\u043D\u043E \u0442\u0430\u043A\u0438\u043C, \u0449\u043E
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430 \u043C\u0430\u0454
      \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430 \u044F\u043A\u043E\u043C\u043E\u0433\u0430
      \u043F\u043E\u0432\u043D\u0456\u0448\u0435, \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F,
      \u044F\u043A\u0435 \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n\\nd. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n\\n\u041D\u0410
      \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F \u0427\u041E\u0413\u041E
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n\\n_____\\n\u0410\u0432\u0442\u043E\u0440: ___________________________\\n\u0406\u043C'\u044F:
      _____\\n\u041D\u0430\u0437\u0432\u0430: _____\\n\u0414\u0430\u0442\u0430: ___________________________\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n\u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n\u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0414\u0430\u0442\u0430: ___________________________\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '27336'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"value\":
        \"16 \u043b\u0438\u043f\u043d\u044f 2024 \u0440\u043e\u043a\u0443\",\n                \"justification\":
        \"\u0414\u0430\u0442\u0430 \u0443\u043a\u043b\u0430\u0434\u0435\u043d\u043d\u044f
        \u0423\u0433\u043e\u0434\u0438 \u043f\u0440\u043e \u043d\u0435\u0440\u043e\u0437\u0433\u043e\u043b\u043e\u0448\u0435\u043d\u043d\u044f
        \u0447\u0456\u0442\u043a\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u0430
        \u044f\u043a 16 \u043b\u0438\u043f\u043d\u044f 2024 \u0440\u043e\u043a\u0443.\"\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549481, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 77,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        5170, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 5120},
        "total_tokens": 5247}}'
    headers:
      Content-Length:
      - '1455'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find a list of consecutively ordered paragraphs from a document and
      a list of aspects.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., aspect_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n\\n1. Read and understand the aspects\\n    - Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.) specified within
      <aspect_id></aspect_id> tags, includes a name specified within <aspect_name></aspect_name>
      tags, and has a description specified within <aspect_description></aspect_description>
      tags.\\n    - Aspects describe themes, topics, or criteria that might be addressed
      in the paragraphs.\\n\\n2. Examine each paragraph\\n    - Each paragraph is
      identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\", etc.) specified
      within <paragraph_id></paragraph_id> tags, followed by the full text of the
      paragraph specified within <paragraph_text></paragraph_text> tags.\\n    - Note
      that paragraphs are listed in the same order they appear in the original document;
      therefore, context from surrounding paragraphs may influence whether a particular
      paragraph is relevant to an aspect.\\n    - You may be working with document
      fragments rather than complete documents. Focus on extracting information from
      the available content without making assumptions about missing parts.\\n\\n3.
      Map paragraphs to aspects\\n    - A paragraph can address one, multiple, or
      none of the aspects.\\n    - If a paragraph clearly relates to an aspect (based
      on the aspect's name and description), include that paragraph's ID under the
      aspect's list of paragraph IDs.\\n    - If a paragraph does not relate to an
      aspect, do not include it under that aspect's list.\\n\\n4. Produce the final
      answer in the JSON format specified within <answer_format></answer_format> tags\\n
      \   - Your output must be a JSON array of objects, each object corresponding
      to a single aspect.\\n    - For each aspect (in the order they are provided),
      include:\\n        -- aspect_id: The aspect's unique identifier, e.g., \\\"A0\\\".\\n
      \       -- paragraph_ids: An array of the paragraph IDs that address or relate
      to the aspect, e.g., [\\\"P0\\\", \\\"P2\\\"].\\n        -- If an aspect has
      no related paragraphs, still include it with an empty paragraph_ids array ([]).\\n-
      Do not add extra commentary, code block markers, or any other formatting beyond
      the JSON array.\\n</task_description>\\n\\n<output_constraints>\\n- No additional
      text:\\n    -- Do not include any headers, explanations, or text outside of
      the JSON array.\\n    -- Do not wrap your JSON response in backticks or any
      other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraph_ids:
      [\\n            str,\\n            ...\\n        ]\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<aspects>\\nDOCUMENT
      ASPECTS:\\n    <aspect id=\\\"A0\\\">\\n        <aspect_id>A0</aspect_id>\\n
      \       \\n        <aspect_name>Term and termination</aspect_name>\\n        \\n
      \       <aspect_description>\\n        All clauses addressing term and termination
      of the contract.\\n        </aspect_description>\\n    </aspect>\\n\\n</aspects>\\n\\n<document_paragraphs>\\nDOCUMENT
      PARAGRAPHS:\\n    <paragraph id=\\\"P0\\\">\\n        <paragraph_id>P0</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P1\\\">\\n
      \       <paragraph_id>P1</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P2\\\">\\n        <paragraph_id>P2</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P3\\\">\\n
      \       <paragraph_id>P3</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P4\\\">\\n        <paragraph_id>P4</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P5\\\">\\n        <paragraph_id>P5</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P6\\\">\\n        <paragraph_id>P6</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P7\\\">\\n
      \       <paragraph_id>P7</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P8\\\">\\n        <paragraph_id>P8</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u043F\u043E\u0448\u0442\u0430: _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P9\\\">\\n        <paragraph_id>P9</paragraph_id>\\n        \\n
      \       <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      B:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P10\\\">\\n
      \       <paragraph_id>P10</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P11\\\">\\n
      \       <paragraph_id>P11</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       5678 \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P12\\\">\\n
      \       <paragraph_id>P12</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u044C\u044E-\u0419\u043E\u0440\u043A, NY 00000\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P13\\\">\\n        <paragraph_id>P13</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443,
      \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P14\\\">\\n
      \       <paragraph_id>P14</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: (012) 345-6789\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P15\\\">\\n        <paragraph_id>P15</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P16\\\">\\n        <paragraph_id>P16</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P17\\\">\\n
      \       <paragraph_id>P17</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041C\u0435\u0442\u043E\u044E \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \u0454 \u0437\u0430\u0445\u0438\u0441\u0442 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P18\\\">\\n
      \       <paragraph_id>P18</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       2. \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P19\\\">\\n        <paragraph_id>P19</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u043B\u044F \u0446\u0456\u043B\u0435\u0439
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P20\\\">\\n
      \       <paragraph_id>P20</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P21\\\">\\n        <paragraph_id>P21</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P22\\\">\\n        <paragraph_id>P22</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P23\\\">\\n
      \       <paragraph_id>P23</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       3. \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P24\\\">\\n        <paragraph_id>P24</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P25\\\">\\n
      \       <paragraph_id>P25</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P26\\\">\\n
      \       <paragraph_id>P26</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P27\\\">\\n
      \       <paragraph_id>P27</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445
      \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445
      \u0437\u0430\u0445\u043E\u0434\u0456\u0432 \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P28\\\">\\n        <paragraph_id>P28</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P29\\\">\\n        <paragraph_id>P29</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P30\\\">\\n
      \       <paragraph_id>P30</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P31\\\">\\n        <paragraph_id>P31</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        b. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P32\\\">\\n
      \       <paragraph_id>P32</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430
      \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445 \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445
      \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457 \u0441\u0442\u043E\u0440\u043E\u043D\u0438
      \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P33\\\">\\n        <paragraph_id>P33</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P34\\\">\\n        <paragraph_id>P34</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        6. \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F
      \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P35\\\">\\n        <paragraph_id>P35</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P36\\\">\\n
      \       <paragraph_id>P36</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       7. \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P37\\\">\\n
      \       <paragraph_id>P37</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0456\u0449\u043E \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456
      \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F
      \u044F\u043A \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P38\\\">\\n        <paragraph_id>P38</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P39\\\">\\n        <paragraph_id>P39</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P40\\\">\\n
      \       <paragraph_id>P40</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0423\u0441\u0456 \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438
      \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F \u0441\u0443\u0434\u0430\u043C\u0438
      \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P41\\\">\\n        <paragraph_id>P41</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        9. \u0420\u0456\u0437\u043D\u0435:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P42\\\">\\n
      \       <paragraph_id>P42</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454
      \u0441\u043E\u0431\u043E\u044E \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P43\\\">\\n
      \       <paragraph_id>P43</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P44\\\">\\n
      \       <paragraph_id>P44</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435
      \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435 \u0432\u0438\u0437\u043D\u0430\u043D\u043E
      \u0442\u0430\u043A\u0438\u043C, \u0449\u043E \u043D\u0435 \u043C\u0430\u0454
      \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457 \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430
      \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430
      \u044F\u043A\u043E\u043C\u043E\u0433\u0430 \u043F\u043E\u0432\u043D\u0456\u0448\u0435,
      \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F, \u044F\u043A\u0435
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P45\\\">\\n        <paragraph_id>P45</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P46\\\">\\n
      \       <paragraph_id>P46</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0410 \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F
      \u0427\u041E\u0413\u041E \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P47\\\">\\n        <paragraph_id>P47</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P48\\\">\\n        <paragraph_id>P48</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P49\\\">\\n        <paragraph_id>P49</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: _____\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P50\\\">\\n
      \       <paragraph_id>P50</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0430\u0437\u0432\u0430: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P51\\\">\\n        <paragraph_id>P51</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P52\\\">\\n
      \       <paragraph_id>P52</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P53\\\">\\n
      \       <paragraph_id>P53</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0410\u0432\u0442\u043E\u0440: ___________________________\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P54\\\">\\n        <paragraph_id>P54</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P55\\\">\\n        <paragraph_id>P55</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P56\\\">\\n        <paragraph_id>P56</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n</document_paragraphs>\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '30778'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"aspect_id\":
        \"A0\",\n        \"paragraph_ids\": [\n            \"P35\",\n            \"P40\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549482, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 34,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        6032, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 6016},
        "total_tokens": 6066}}'
    headers:
      Content-Length:
      - '1229'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find a list of consecutively ordered paragraphs from a document and
      a list of aspects.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., aspect_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n\\n1. Read and understand the aspects\\n    - Each aspect is identified
      by an Aspect ID (for example, \\\"A0\\\", \\\"A1\\\", etc.) specified within
      <aspect_id></aspect_id> tags, includes a name specified within <aspect_name></aspect_name>
      tags, and has a description specified within <aspect_description></aspect_description>
      tags.\\n    - Aspects describe themes, topics, or criteria that might be addressed
      in the paragraphs.\\n\\n2. Examine each paragraph\\n    - Each paragraph is
      identified by a paragraph ID (for example, \\\"P0\\\", \\\"P1\\\", etc.) specified
      within <paragraph_id></paragraph_id> tags, followed by the full text of the
      paragraph specified within <paragraph_text></paragraph_text> tags.\\n    - Note
      that paragraphs are listed in the same order they appear in the original document;
      therefore, context from surrounding paragraphs may influence whether a particular
      paragraph is relevant to an aspect.\\n    - You may be working with document
      fragments rather than complete documents. Focus on extracting information from
      the available content without making assumptions about missing parts.\\n\\n3.
      Map paragraphs to aspects\\n    - A paragraph can address one, multiple, or
      none of the aspects.\\n    - If a paragraph clearly relates to an aspect (based
      on the aspect's name and description), include the paragraph's ID and provide
      a justification, detailing why the paragraph is relevant to the aspect.\\n    -
      If a paragraph does not relate to an aspect, do not include it under that aspect's
      list.\\n\\n4. Produce the final answer in the JSON format specified within <answer_format></answer_format>
      tags\\n    - Your output must be a JSON array of objects, each object corresponding
      to a single aspect.\\n    - For each aspect (in the order they are provided),
      include:\\n        -- aspect_id: The aspect's unique identifier, e.g., \\\"A0\\\".\\n
      \       -- paragraphs: An array of objects for each paragraph that addresses
      or relates to the aspect. Each object should include:\\n            --- paragraph_id:
      The provided paragraph ID, e.g., \\\"P0\\\", \\\"P2\\\".\\n            --- justification:
      A justification of why the paragraph is relevant to the aspect. Ensure the justification
      is specific and directly ties the content of the paragraph to the aspect's defining
      features. Never reference any of the structural IDs provided in this prompt
      (such as aspect IDs like \\\"A0\\\", or paragraph IDs like \\\"P0\\\") in the
      justification.\\n                ---- Justification should be brief, i.e. highlight
      only the essential details.\\n                ---- Justification should be no
      longer than 2 sentences.\\n                ---- Justification should be in the
      original language of the document.\\n        -- If an aspect has no related
      paragraphs, still include it with an empty paragraphs array ([]).\\n- Do not
      add extra commentary, code block markers, or any other formatting beyond the
      JSON array.\\n</task_description>\\n\\n<output_constraints>\\n- No additional
      text:\\n    -- Do not include any headers, explanations, or text outside of
      the JSON array.\\n    -- Do not wrap your JSON response in backticks or any
      other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"aspect_id\\\": str,\\n        \\\"paragraphs:
      [\\n            {\\n                \\\"paragraph_id\\\": str,\\n                \\\"justification\\\":
      str\\n            },\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<aspects>\\nDOCUMENT
      ASPECTS:\\n    <aspect id=\\\"A0\\\">\\n        <aspect_id>A0</aspect_id>\\n
      \       \\n        <aspect_name>Parties</aspect_name>\\n        \\n        <aspect_description>\\n
      \       Parties to the agreement\\n        </aspect_description>\\n    </aspect>\\n\\n</aspects>\\n\\n<document_paragraphs>\\nDOCUMENT
      PARAGRAPHS:\\n    <paragraph id=\\\"P0\\\">\\n        <paragraph_id>P0</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P1\\\">\\n
      \       <paragraph_id>P1</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P2\\\">\\n        <paragraph_id>P2</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P3\\\">\\n
      \       <paragraph_id>P3</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P4\\\">\\n        <paragraph_id>P4</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P5\\\">\\n        <paragraph_id>P5</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P6\\\">\\n        <paragraph_id>P6</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P7\\\">\\n
      \       <paragraph_id>P7</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P8\\\">\\n        <paragraph_id>P8</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u043F\u043E\u0448\u0442\u0430: _____\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P9\\\">\\n        <paragraph_id>P9</paragraph_id>\\n        \\n
      \       <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430
      B:\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P10\\\">\\n
      \       <paragraph_id>P10</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P11\\\">\\n
      \       <paragraph_id>P11</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       5678 \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P12\\\">\\n
      \       <paragraph_id>P12</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u044C\u044E-\u0419\u043E\u0440\u043A, NY 00000\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P13\\\">\\n        <paragraph_id>P13</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443,
      \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P14\\\">\\n
      \       <paragraph_id>P14</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u0435\u043B\u0435\u0444\u043E\u043D: (012) 345-6789\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P15\\\">\\n        <paragraph_id>P15</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P16\\\">\\n        <paragraph_id>P16</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P17\\\">\\n
      \       <paragraph_id>P17</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041C\u0435\u0442\u043E\u044E \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \u0454 \u0437\u0430\u0445\u0438\u0441\u0442 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P18\\\">\\n
      \       <paragraph_id>P18</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       2. \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P19\\\">\\n        <paragraph_id>P19</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u043B\u044F \u0446\u0456\u043B\u0435\u0439
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P20\\\">\\n
      \       <paragraph_id>P20</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P21\\\">\\n        <paragraph_id>P21</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P22\\\">\\n        <paragraph_id>P22</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P23\\\">\\n
      \       <paragraph_id>P23</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       3. \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P24\\\">\\n        <paragraph_id>P24</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P25\\\">\\n
      \       <paragraph_id>P25</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P26\\\">\\n
      \       <paragraph_id>P26</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P27\\\">\\n
      \       <paragraph_id>P27</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445
      \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445
      \u0437\u0430\u0445\u043E\u0434\u0456\u0432 \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P28\\\">\\n        <paragraph_id>P28</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P29\\\">\\n        <paragraph_id>P29</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P30\\\">\\n
      \       <paragraph_id>P30</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P31\\\">\\n        <paragraph_id>P31</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        b. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P32\\\">\\n
      \       <paragraph_id>P32</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430
      \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445 \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445
      \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457 \u0441\u0442\u043E\u0440\u043E\u043D\u0438
      \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P33\\\">\\n        <paragraph_id>P33</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P34\\\">\\n        <paragraph_id>P34</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        6. \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F
      \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P35\\\">\\n        <paragraph_id>P35</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P36\\\">\\n
      \       <paragraph_id>P36</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       7. \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P37\\\">\\n
      \       <paragraph_id>P37</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0456\u0449\u043E \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456
      \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F
      \u044F\u043A \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P38\\\">\\n        <paragraph_id>P38</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P39\\\">\\n        <paragraph_id>P39</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P40\\\">\\n
      \       <paragraph_id>P40</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0423\u0441\u0456 \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438
      \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F \u0441\u0443\u0434\u0430\u043C\u0438
      \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P41\\\">\\n        <paragraph_id>P41</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        9. \u0420\u0456\u0437\u043D\u0435:\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P42\\\">\\n
      \       <paragraph_id>P42</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       a. \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454
      \u0441\u043E\u0431\u043E\u044E \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P43\\\">\\n
      \       <paragraph_id>P43</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       b. \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P44\\\">\\n
      \       <paragraph_id>P44</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0432. \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435
      \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435 \u0432\u0438\u0437\u043D\u0430\u043D\u043E
      \u0442\u0430\u043A\u0438\u043C, \u0449\u043E \u043D\u0435 \u043C\u0430\u0454
      \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457 \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430
      \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430
      \u044F\u043A\u043E\u043C\u043E\u0433\u0430 \u043F\u043E\u0432\u043D\u0456\u0448\u0435,
      \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F, \u044F\u043A\u0435
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P45\\\">\\n        <paragraph_id>P45</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        d. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P46\\\">\\n
      \       <paragraph_id>P46</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0410 \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F
      \u0427\u041E\u0413\u041E \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P47\\\">\\n        <paragraph_id>P47</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P48\\\">\\n        <paragraph_id>P48</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P49\\\">\\n        <paragraph_id>P49</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: _____\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P50\\\">\\n
      \       <paragraph_id>P50</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u041D\u0430\u0437\u0432\u0430: _____\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P51\\\">\\n        <paragraph_id>P51</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P52\\\">\\n
      \       <paragraph_id>P52</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph id=\\\"P53\\\">\\n
      \       <paragraph_id>P53</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0410\u0432\u0442\u043E\u0440: ___________________________\\n        </paragraph_text>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P54\\\">\\n        <paragraph_id>P54</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n        </paragraph_text>\\n    </paragraph>\\n\\n    <paragraph
      id=\\\"P55\\\">\\n        <paragraph_id>P55</paragraph_id>\\n        \\n        <paragraph_text>\\n
      \       \u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n        </paragraph_text>\\n    </paragraph>\\n\\n
      \   <paragraph id=\\\"P56\\\">\\n        <paragraph_id>P56</paragraph_id>\\n
      \       \\n        <paragraph_text>\\n        \u0414\u0430\u0442\u0430: ___________________________\\n
      \       </paragraph_text>\\n    </paragraph>\\n\\n</document_paragraphs>\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '31575'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n  {\n    \"aspect_id\": \"A0\",\n    \"paragraphs\": [\n      {\n        \"paragraph_id\":
        \"P1\",\n        \"justification\": \"\u0426\u0435\u0439 \u0430\u0431\u0437\u0430\u0446
        \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e
        \u043f\u0440\u043e \u0434\u0430\u0442\u0443 \u0443\u043a\u043b\u0430\u0434\u0435\u043d\u043d\u044f
        \u0443\u0433\u043e\u0434\u0438 \u0442\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u044f\u043a\u0456 \u0457\u0457 \u0443\u043a\u043b\u0430\u043b\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P2\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u043d\u0430 \u043f\u0435\u0440\u0448\u0443 \u0441\u0442\u043e\u0440\u043e\u043d\u0443
        \u0443\u0433\u043e\u0434\u0438, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e
        \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0441\u0442\u043e\u0440\u0456\u043d.\"\n      },\n      {\n        \"paragraph_id\":
        \"P6\",\n        \"justification\": \"\u041d\u0430\u0434\u0430\u0454 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u0443
        \u043e\u0441\u043e\u0431\u0443 \u0434\u043b\u044f \u043f\u0435\u0440\u0448\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e
        \u043f\u0440\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u0438 \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P7\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u0438\u0439 \u043d\u043e\u043c\u0435\u0440
        \u043f\u0435\u0440\u0448\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0454\u044e
        \u043f\u0440\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P8\",\n        \"justification\": \"\u041d\u0430\u0434\u0430\u0454 \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443
        \u043f\u043e\u0448\u0442\u0443 \u043f\u0435\u0440\u0448\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P9\",\n        \"justification\": \"\u0412\u043a\u0430\u0437\u0443\u0454
        \u043d\u0430 \u0434\u0440\u0443\u0433\u0443 \u0441\u0442\u043e\u0440\u043e\u043d\u0443
        \u0443\u0433\u043e\u0434\u0438, \u0449\u043e \u0454 \u0447\u0430\u0441\u0442\u0438\u043d\u043e\u044e
        \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0441\u0442\u043e\u0440\u0456\u043d.\"\n      },\n      {\n        \"paragraph_id\":
        \"P10\",\n        \"justification\": \"\u041d\u0430\u0437\u0432\u0430 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438 \u0443\u0433\u043e\u0434\u0438,
        \u0449\u043e \u0454 \u043a\u043b\u044e\u0447\u043e\u0432\u043e\u044e \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0454\u044e
        \u043f\u0440\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P11\",\n        \"justification\": \"\u0410\u0434\u0440\u0435\u0441\u0430
        \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e \u043f\u0440\u043e
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438 \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P12\",\n        \"justification\": \"\u041c\u0456\u0441\u0442\u0438\u0442\u044c
        \u043c\u0456\u0441\u0442\u043e \u0442\u0430 \u043f\u043e\u0448\u0442\u043e\u0432\u0438\u0439
        \u0456\u043d\u0434\u0435\u043a\u0441 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d.\"\n      },\n      {\n        \"paragraph_id\":
        \"P13\",\n        \"justification\": \"\u0406\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f
        \u043f\u0440\u043e \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u0443
        \u043e\u0441\u043e\u0431\u0443 \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e \u043f\u0440\u043e
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P14\",\n        \"justification\": \"\u0422\u0435\u043b\u0435\u0444\u043e\u043d
        \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0454\u044e
        \u043f\u0440\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u0438 \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P15\",\n        \"justification\": \"\u0415\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430
        \u0430\u0434\u0440\u0435\u0441\u0430 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P52\",\n        \"justification\": \"\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u0430
        \u0437\u0433\u0430\u0434\u043a\u0430 \u043d\u0430\u0437\u0432\u0438 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0443\u0454
        \u0457\u0457 \u0443\u0447\u0430\u0441\u0442\u044c \u0443 \u0443\u0433\u043e\u0434\u0456.\"\n      },\n      {\n        \"paragraph_id\":
        \"P54\",\n        \"justification\": \"\u0406\u043c''\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043d\u0438\u043a\u0430
        \u0434\u0440\u0443\u0433\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438,
        \u0449\u043e \u0454 \u0434\u0435\u0442\u0430\u043b\u043b\u044e \u043f\u0440\u043e
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438.\"\n      },\n      {\n        \"paragraph_id\":
        \"P55\",\n        \"justification\": \"\u041f\u043e\u0441\u0430\u0434\u0430
        \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043d\u0438\u043a\u0430 \u0434\u0440\u0443\u0433\u043e\u0457
        \u0441\u0442\u043e\u0440\u043e\u043d\u0438, \u0449\u043e \u0441\u0442\u043e\u0441\u0443\u0454\u0442\u044c\u0441\u044f
        \u0441\u0442\u043e\u0440\u0456\u043d \u0443\u0433\u043e\u0434\u0438.\"\n      }\n    ]\n  }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549482, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 634,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        6173, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 6144},
        "total_tokens": 6807}}'
    headers:
      Content-Length:
      - '4418'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Contract
      party name</concept_name>\\n\\n    <concept_description>\\n    Contract party
      name in the contract. Exclude information on individual signatories.\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>str
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0426\u044E
      \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      _____\\n\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D: _____\\n\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u043F\u043E\u0448\u0442\u0430: _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      B:\\n\\n\u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\\n\u0406\u043C'\u044F:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443\\n\\n\u0417\u0432\u0430\u043D\u043D\u044F:
      \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '16364'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"\u0422\u041e\u0412
        \u00ab\u041f\u0440\u0438\u043a\u043b\u0430\u0434.\u041a\u043e\u043c\u00bb\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549489, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 36,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3175, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 2944},
        "total_tokens": 3211}}'
    headers:
      Content-Length:
      - '1239'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Contract
      term</concept_name>\\n\\n    <concept_description>\\n    Contract term\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>str
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '16181'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"5 (\u043f\u2019\u044f\u0442\u0438)
        \u0440\u043e\u043a\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438 \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f
        \u0446\u044c\u043e\u0433\u043e \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0443\"\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549489, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 44,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3118, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 3072},
        "total_tokens": 3162}}'
    headers:
      Content-Length:
      - '1294'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Title</concept_name>\\n\\n
      \   <concept_description>\\n    Contract title\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>str
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n\\n\u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n_____\\n_____\\n_____\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: _____\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      _____\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430 \u043F\u043E\u0448\u0442\u0430:
      _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430 B:\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n\\n\u041C\u0435\u0442\u043E\u044E
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0454 \u0437\u0430\u0445\u0438\u0441\u0442
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n\\n2.
      \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u0414\u043B\u044F
      \u0446\u0456\u043B\u0435\u0439 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n\u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n\\n3.
      \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n\\na.
      \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\nb.
      \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n\\n\u0432.
      \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445 \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445
      \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445 \u0437\u0430\u0445\u043E\u0434\u0456\u0432
      \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n\\na.
      \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n\\nb. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n\\n\u0432.
      \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430 \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445
      \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445 \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438.\\n\\nd. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n6.
      \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n7.
      \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n\\n\u041D\u0456\u0449\u043E
      \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F \u044F\u043A
      \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n\\n8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n\\n\u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n\\n9. \u0420\u0456\u0437\u043D\u0435:\\n\\na.
      \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454 \u0441\u043E\u0431\u043E\u044E
      \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443 \u043C\u0456\u0436
      \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n\\nb.
      \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n\\n\u0432.
      \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435
      \u0432\u0438\u0437\u043D\u0430\u043D\u043E \u0442\u0430\u043A\u0438\u043C, \u0449\u043E
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430 \u043C\u0430\u0454
      \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430 \u044F\u043A\u043E\u043C\u043E\u0433\u0430
      \u043F\u043E\u0432\u043D\u0456\u0448\u0435, \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F,
      \u044F\u043A\u0435 \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n\\nd. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n\\n\u041D\u0410
      \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F \u0427\u041E\u0413\u041E
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n\\n_____\\n\u0410\u0432\u0442\u043E\u0440: ___________________________\\n\u0406\u043C'\u044F:
      _____\\n\u041D\u0430\u0437\u0432\u0430: _____\\n\u0414\u0430\u0442\u0430: ___________________________\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n\u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n\u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0414\u0430\u0442\u0430: ___________________________\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '26375'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"\u0423\u0433\u043e\u0434\u0430
        \u043f\u0440\u043e \u043d\u0435\u0440\u043e\u0437\u0433\u043e\u043b\u043e\u0448\u0435\u043d\u043d\u044f
        (NDA)\"\n        ]\n    }\n]", "refusal": null, "role": "assistant"}}], "created":
        1755549489, "id": "chatcmpl-DUMMY", "model": "gpt-4.1-mini-2025-04-14", "object":
        "chat.completion", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results":
        {"hate": {"filtered": false, "severity": "safe"}, "jailbreak": {"filtered":
        false, "detected": false}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}}], "system_fingerprint": "fp_4f3d32ad4e", "usage":
        {"completion_tokens": 40, "completion_tokens_details": {"accepted_prediction_tokens":
        0, "audio_tokens": 0, "reasoning_tokens": 0, "rejected_prediction_tokens":
        0}, "prompt_tokens": 4997, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens":
        2816}, "total_tokens": 5037}}'
    headers:
      Content-Length:
      - '1259'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Contract
      party name and role</concept_name>\\n\\n    <concept_description>\\n    Contract
      party name and role in the contract. Exclude information on individual signatories.\\n
      \   </concept_description>\\n\\n    <amount_of_extracted_items>This concept
      may have zero, one, or multiple extracted items.</amount_of_extracted_items>\\n\\n
      \   <extracted_item_examples>\\n        <extracted_item_example>\\n        custom_data={}
      content='Company ABC (Supplier)'\\n        </extracted_item_example>\\n    </extracted_item_examples>\\n\\n
      \   <extracted_item_type>str (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0426\u044E
      \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      _____\\n\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D: _____\\n\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u043F\u043E\u0448\u0442\u0430: _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      B:\\n\\n\u0422\u041E\u0412 \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\\n\u0406\u043C'\u044F:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443\\n\\n\u0417\u0432\u0430\u043D\u043D\u044F:
      \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '16573'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            \"\u0421\u0442\u043e\u0440\u043e\u043d\u0430
        \u0410\",\n            \"\u0422\u041e\u0412 \u00ab\u041f\u0440\u0438\u043a\u043b\u0430\u0434.\u041a\u043e\u043c\u00bb
        (\u0421\u0442\u043e\u0440\u043e\u043d\u0430 B)\"\n        ]\n    }\n]", "refusal":
        null, "role": "assistant"}}], "created": 1755549489, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 48,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3218, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 3072},
        "total_tokens": 3266}}'
    headers:
      Content-Length:
      - '1294'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array of objects with mandatory fields \\\"value\\\" and \\\"justification\\\".
      If the concept is not addressed or there are no items to extract, leave the
      array empty ([]). For boolean concepts, only leave empty if the concept is impossible
      to determine.\\n        --- Extracted items may be found directly (explicitly
      mentioned) or inferred from the content (implied or derivable from the information
      present).\\n        --- Guidance regarding the possible amount of extracted
      items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item's object, even if there is only one, must be part
      of the \\\"extracted_items\\\" array.\\n</concept_extraction_rules>\\n\\n<extracted_item_object_structure>\\n-
      Item object structure:\\n    -- value: Mandatory field holding the extracted
      item. Must match the exact type specified for the concept.\\n        --- If
      a specific structure is provided for a concept within <expected_structure></expected_structure>
      tags, the extracted item value must follow that structure for all extracted
      items corresponding to that concept.\\n        --- If a rating scale is provided
      for a concept within <rating_scale></rating_scale> tags, the extracted item
      value must be within that scale.\\n        --- If available labels are provided
      for a concept within <available_labels></available_labels> tags, the extracted
      item value must be a list containing only labels from the predefined set. The
      classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n        --- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, the extracted item value should follow the same style and formatting.\\n
      \           ---- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n        --- When extracting string values, retain them in the original
      language of the document without translating them.\\n    -- justification: Mandatory
      field holding a justification of why the item was extracted for the concept.
      Ensure the justification is specific and directly ties the extracted item to
      the concept's defining features. Never reference the concept's ID or any of
      the structural IDs provided in this prompt (such as paragraph IDs like \\\"P0\\\",
      or sentence IDs like \\\"P0-S0\\\") in the justification.\\n        --- Justification
      should be brief, i.e. highlight only the essential details.\\n        --- Justification
      should be no longer than 2 sentences.\\n        --- Justification should be
      in the original language of the document.\\n</extracted_item_object_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure that
      the value of each of the extracted items for the concept strictly matches that
      type. Python types are provided (e.g., str for string, int for integer, float
      for floating-point number, dict for object, etc.). Type compliance is mandatory
      - any deviation will result in invalid output.\\n    -- Do not introduce any
      extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            {\\n                \\\"value\\\": ...,\\n                \\\"justification\\\":
      str\\n            },\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Start
      date</concept_name>\\n\\n    <concept_description>\\n    Contract start date\\n
      \   </concept_description>\\n\\n    <amount_of_extracted_items>This concept
      may have zero, one, or multiple extracted items.</amount_of_extracted_items>\\n\\n
      \   <extracted_item_type>str (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n\\n\u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n_____\\n_____\\n_____\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: _____\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      _____\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430 \u043F\u043E\u0448\u0442\u0430:
      _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430 B:\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n\\n\u041C\u0435\u0442\u043E\u044E
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0454 \u0437\u0430\u0445\u0438\u0441\u0442
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n\\n2.
      \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u0414\u043B\u044F
      \u0446\u0456\u043B\u0435\u0439 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n\u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n\\n3.
      \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n\\na.
      \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\nb.
      \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n\\n\u0432.
      \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445 \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445
      \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445 \u0437\u0430\u0445\u043E\u0434\u0456\u0432
      \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n\\na.
      \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n\\nb. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n\\n\u0432.
      \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430 \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445
      \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445 \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438.\\n\\nd. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n6.
      \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n7.
      \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n\\n\u041D\u0456\u0449\u043E
      \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F \u044F\u043A
      \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n\\n8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n\\n\u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n\\n9. \u0420\u0456\u0437\u043D\u0435:\\n\\na.
      \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454 \u0441\u043E\u0431\u043E\u044E
      \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443 \u043C\u0456\u0436
      \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n\\nb.
      \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n\\n\u0432.
      \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435
      \u0432\u0438\u0437\u043D\u0430\u043D\u043E \u0442\u0430\u043A\u0438\u043C, \u0449\u043E
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430 \u043C\u0430\u0454
      \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430 \u044F\u043A\u043E\u043C\u043E\u0433\u0430
      \u043F\u043E\u0432\u043D\u0456\u0448\u0435, \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F,
      \u044F\u043A\u0435 \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n\\nd. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n\\n\u041D\u0410
      \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F \u0427\u041E\u0413\u041E
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n\\n_____\\n\u0410\u0432\u0442\u043E\u0440: ___________________________\\n\u0406\u043C'\u044F:
      _____\\n\u041D\u0430\u0437\u0432\u0430: _____\\n\u0414\u0430\u0442\u0430: ___________________________\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n\u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n\u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0414\u0430\u0442\u0430: ___________________________\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '27336'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"},
        "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered":
        false, "severity": "safe"}}, "finish_reason": "stop", "index": 0, "logprobs":
        null, "message": {"annotations": [], "content": "[\n    {\n        \"concept_id\":
        \"C0\",\n        \"extracted_items\": [\n            {\n                \"value\":
        \"16 \u043b\u0438\u043f\u043d\u044f 2024 \u0440\u043e\u043a\u0443\",\n                \"justification\":
        \"\u0414\u0430\u0442\u0430 \u0443\u043a\u043b\u0430\u0434\u0435\u043d\u043d\u044f
        \u0423\u0433\u043e\u0434\u0438 \u043f\u0440\u043e \u043d\u0435\u0440\u043e\u0437\u0433\u043e\u043b\u043e\u0448\u0435\u043d\u043d\u044f
        \u0447\u0456\u0442\u043a\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u0430
        \u044f\u043a 16 \u043b\u0438\u043f\u043d\u044f 2024 \u0440\u043e\u043a\u0443.\"\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549489, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 77,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        5170, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 5120},
        "total_tokens": 5247}}'
    headers:
      Content-Length:
      - '1455'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find a list of document paragraphs (including sentences) and a list
      of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll structured
      information in these instructions is provided using semantic XML tags. Field
      names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the provided document paragraphs and their sentences.\\n
      \   - Each paragraph is identified by a paragraph ID (for example, \\\"P0\\\",
      \\\"P1\\\", etc.) specified within <paragraph_id></paragraph_id> tags.\\n    -
      Each paragraph includes sentences, each identified by a sentence ID (for example,
      \\\"P0-S0\\\", \\\"P0-S1\\\", etc.) specified within <sentence_id></sentence_id>
      tags, followed by the full text of the sentence specified within <sentence_text></sentence_text>
      tags.\\n    - Note that paragraphs are listed in the same order they appear
      in the original document.\\n    - You may be working with document fragments
      rather than complete documents. Focus on extracting information from the available
      content without making assumptions about missing parts.\\n2. Identify whether
      each concept in the concepts list is addressed within the document paragraphs.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document paragraphs, you must still include
      an entry in the final JSON output but with an empty \\\"extracted_items\\\"
      list. However, for boolean concepts (with extracted item type \\\"bool\\\"),
      distinguish carefully:\\n    - Extract True if the concept is confirmed or strongly
      supported by the document content (either explicitly stated or reasonably inferred)\\n
      \   - Extract False if the concept is contradicted, denied, or if the document
      content allows you to determine that the concept is not true (e.g., absence
      of expected content that should be present if the concept were true)\\n    -
      Only leave \\\"extracted_items\\\" empty if the concept is impossible to determine
      because either: (1) the document is completely irrelevant to the concept, or
      (2) the document does not contain enough information to make a conclusion about
      the concept\\n\\nFollow these additional rules:\\n\\n- Output format:\\n    --
      Provide your answer in the JSON format specified within <answer_format></answer_format>
      tags (do not include backticks, code fences, or any introductory/explanatory
      text). Follow this format exactly.\\n\\n- Consistency:\\n    -- Each JSON object
      in the list must have two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n
      \   -- The value of \\\"concept_id\\\" must match exactly the ID of the concept
      (for example, \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array of objects with mandatory fields \\\"value\\\", \\\"justification\\\",
      and \\\"reference_paragraphs\\\". If the concept is not addressed or there are
      no items to extract, leave the array empty ([]). For boolean concepts, only
      leave empty if the concept is impossible to determine.\\n        --- Extracted
      items may be found directly (explicitly mentioned) or inferred from the content
      (implied or derivable from the information present).\\n        --- Guidance
      regarding the possible amount of extracted items for the concept is specified
      within <amount_of_extracted_items></amount_of_extracted_items> tags. Each extracted
      item's object, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n        --- The value of \\\"reference_paragraphs\\\" must be an array
      of objects with mandatory fields \\\"reference_paragraph_id\\\", which holds
      the provided ID of the reference paragraph, and \\\"reference_sentence_ids\\\",
      which holds the provided IDs of the reference sentences within the paragraph.
      Note that not every sentence in the paragraph necessarily serves as a relevant
      reference.\\n</concept_extraction_rules>\\n\\n<extracted_item_object_structure>\\n-
      Item object structure:\\n    -- value: Mandatory field holding the extracted
      item. Must match the exact type specified for the concept.\\n        --- If
      a specific structure is provided for a concept within <expected_structure></expected_structure>
      tags, the extracted item value must follow that structure for all extracted
      items corresponding to that concept.\\n        --- If a rating scale is provided
      for a concept within <rating_scale></rating_scale> tags, the extracted item
      value must be within that scale.\\n        --- If available labels are provided
      for a concept within <available_labels></available_labels> tags, the extracted
      item value must be a list containing only labels from the predefined set. The
      classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n        --- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, the extracted item value should follow the same style and formatting.\\n
      \           ---- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n        --- When extracting string values, retain them in the original
      language of the document without translating them.\\n    -- justification: Mandatory
      field holding a justification of why the item was extracted for the concept.
      Ensure the justification is specific and directly ties the extracted item to
      the concept's defining features. Never reference the concept's ID or any of
      the structural IDs provided in this prompt (such as paragraph IDs like \\\"P0\\\",
      or sentence IDs like \\\"P0-S0\\\") in the justification.\\n        --- Justification
      should be brief, i.e. highlight only the essential details.\\n        --- Justification
      should be no longer than 2 sentences.\\n        --- Justification should be
      in the original language of the document.\\n    -- reference_paragraphs: An
      array of objects for each paragraph based on which the item was extracted for
      the concept. Each object should include:\\n        --- reference_paragraph_id:
      Mandatory field holding the provided ID of the reference paragraph. Each paragraph
      ID must match exactly the provided ID for the paragraph (for example, \\\"P0\\\",
      \\\"P1\\\", etc.).\\n        --- reference_sentence_ids: Mandatory field holding
      an array of the provided IDs of the sentences within the paragraph, based on
      which the item was extracted for the concept. Each sentence ID must match exactly
      the provided ID for the sentence (for example, \\\"P0-S0\\\", \\\"P0-S2\\\",
      etc.).\\n</extracted_item_object_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure that
      the value of each of the extracted items for the concept strictly matches that
      type. Python types are provided (e.g., str for string, int for integer, float
      for floating-point number, dict for object, etc.). Type compliance is mandatory
      - any deviation will result in invalid output.\\n    -- Do not introduce any
      extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            {\\n                \\\"value\\\": ...,\\n                \\\"justification\\\":
      str,\\n                \\\"reference_paragraphs\\\": [\\n                    {\\n
      \                       \\\"reference_paragraph_id\\\": str,\\n                        \\\"reference_sentence_ids\\\":
      [\\n                            str,\\n                            ...\\n                        ]\\n
      \                   },\\n                    ...\\n                ]\\n            },\\n
      \           ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Duration</concept_name>\\n\\n
      \   <concept_description>\\n    Contract duration in years\\n    </concept_description>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>int
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_paragraphs>\\nDOCUMENT
      PARAGRAPHS INCLUDING SENTENCES:\\n    <paragraph id=\\\"P0\\\">\\n        <paragraph_id>P0</paragraph_id>\\n
      \       \\n        <paragraph_sentences>\\n            <sentence id=\\\"P0-S0\\\">\\n
      \               <sentence_id>P0-S0</sentence_id>\\n                \\n                <sentence_text>\\n
      \               \u041F\u0456\u0441\u043B\u044F \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F
      \u0434\u0456\u0457 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E
      \u0437\u0430 \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n
      \               </sentence_text>\\n            </sentence>\\n        </paragraph_sentences>\\n
      \   </paragraph>\\n\\n    <paragraph id=\\\"P1\\\">\\n        <paragraph_id>P1</paragraph_id>\\n
      \       \\n        <paragraph_sentences>\\n            <sentence id=\\\"P1-S0\\\">\\n
      \               <sentence_id>P1-S0</sentence_id>\\n                \\n                <sentence_text>\\n
      \               \u0423\u0441\u0456 \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438
      \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F \u0441\u0443\u0434\u0430\u043C\u0438
      \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.\\n
      \               </sentence_text>\\n            </sentence>\\n            <sentence
      id=\\\"P1-S1\\\">\\n                <sentence_id>P1-S1</sentence_id>\\n                \\n
      \               <sentence_text>\\n                \u0414\u043E\u0433\u043E\u0432\u0456\u0440
      \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C 5 (\u043F\u2019\u044F\u0442\u0438)
      \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n
      \               </sentence_text>\\n            </sentence>\\n        </paragraph_sentences>\\n
      \   </paragraph>\\n\\n</document_paragraphs>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '20339'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n    {\n        \"concept_id\": \"C0\",\n        \"extracted_items\":
        [\n            {\n                \"value\": 5,\n                \"justification\":
        \"\u0414\u043e\u0433\u043e\u0432\u0456\u0440 \u0434\u0456\u0454 \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c
        5 (\u043f\u2019\u044f\u0442\u0438) \u0440\u043e\u043a\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
        \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u0446\u044c\u043e\u0433\u043e
        \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0443, \u0449\u043e \u0432\u043a\u0430\u0437\u0443\u0454
        \u043d\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c
        \u0443 5 \u0440\u043e\u043a\u0456\u0432.\",\n                \"reference_paragraphs\":
        [\n                    {\n                        \"reference_paragraph_id\":
        \"P1\",\n                        \"reference_sentence_ids\": [\n                            \"P1-S1\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549489, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 124,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        3892, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 3840},
        "total_tokens": 4016}}'
    headers:
      Content-Length:
      - '1897'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
- request:
    body: "{\"messages\":[{\"role\":\"system\",\"content\":\"<introduction>\\nYou
      will be assigned tasks involving the extraction, analysis, and interpretation
      of data within various types of documents. Your role is to carefully process
      the information and provide accurate, relevant outputs based on the specific
      instructions provided.\\n</introduction>\\n\\n<guidance_on_instruction_structure>\\nAll
      instructions you receive will be organized using semantic XML tags for clarity
      and structure. Each section will be properly tagged to indicate its purpose
      and content type, making it easier to understand the task requirements and expected
      outputs.\\n</guidance_on_instruction_structure>\\n\\n<key_terminology>\\nKEY
      TERMINOLOGY TO UNDERSTAND:\\n\\n  <document_definition>\\n  1. Document: A structured
      or unstructured file containing written or visual content. Documents can vary
      in type and purpose, including but not limited to:\\n    <document_types>\\n
      \   - Contracts: Legal agreements defining terms and obligations.\\n    - Invoices:
      Financial documents detailing transactions and payments.\\n    - Curricula Vitae
      (CVs): Resumes outlining an individual's professional experience and qualifications.\\n
      \   - Visual Documents: Images, scanned documents, blueprints, photographs,
      charts, diagrams, or screenshots that contain relevant information.\\n    -
      General Documents: Any other types of files that may contain text, tables, images,
      or mixed formats.\\n    </document_types>\\n  \\n  Note that occasionally you
      may be working with document fragments rather than complete documents. These
      fragments represent portions of a larger document and should be analyzed within
      their limited context. When working with fragments, focus on extracting information
      from the available content without making assumptions about missing parts.\\n\\n
      \   <content_types>\\n    Documents may contain textual or visual content:\\n
      \   - Text-based content: Written information that can be directly read and
      processed.\\n    - Visual content: Images, charts, diagrams, blueprints, tables,
      handwritten text, or other visual elements that require visual interpretation.\\n
      \   </content_types>\\n  </document_definition>\\n\\n  <aspect_definition>\\n
      \ 2. Aspect: A defined area or topic within a document that requires focused
      attention. Each aspect corresponds to a specific subject or theme described
      in the task. For example:\\n    <aspect_examples>\\n    - Contract Aspects:
      Payment terms, parties involved, or termination clauses.\\n    - Invoice Aspects:
      Due dates, line-item breakdowns, or tax details.\\n    - CV Aspects: Work experience,
      education, or skills.\\n    </aspect_examples>\\n  You will analyze aspects
      as instructed, considering their relevance and context within the document.\\n
      \ </aspect_definition>\\n\\n  <concept_definition>\\n  3. Concept: A unit of
      information or an entity relevant to the task. Concepts may be derived from
      an aspect or the broader document context. They represent a wide range of data
      points and insights, from simple entities (names, dates, monetary values) to
      complex evaluations, conclusions, and answers to specific questions. Concepts
      can be:\\n    <concept_types>\\n    - Factual extractions: Such as a penalty
      clause in a contract, a total amount due in an invoice, or a certification in
      a CV.\\n    - Analytical insights: Such as risk assessments, compliance evaluations,
      or pattern identifications.\\n    - Reasoned conclusions: Such as determining
      whether a document meets specific criteria or answers particular questions.\\n
      \   - Interpretative judgments: Such as ratings, classifications, or qualitative
      assessments based on document content.\\n    - Label classifications: Content
      categorization using predefined labels.\\n    </concept_types>\\n  </concept_definition>\\n\\n</key_terminology>\\n\\n<critical_guidelines>\\nCRITICAL
      GUIDELINES FOR YOUR WORK:\\n\\n  <precision_and_accuracy>\\n  - Precision and
      accuracy: Extract only information that is explicitly stated or can be directly
      inferred from the document content. Avoid speculation or assumptions beyond
      what the document content clearly supports.\\n  </precision_and_accuracy>\\n\\n
      \ <visual_content_analysis>\\n  - Visual content analysis: When processing visual
      content (images):\\n    -- Examine all visual elements carefully, including
      text within images, charts, diagrams, logos, layout structures, etc.\\n    --
      Identify and analyze visual patterns, relationships, and structural information
      that may not be explicitly stated in text.\\n    -- Consider the visual context
      and layout as it may provide important semantic information.\\n    -- Analyze
      information in tables, forms, charts, and diagrams with attention to their visual
      structure and relationships.\\n  </visual_content_analysis>\\n\\n  <contextual_understanding>\\n
      \ - Contextual understanding: Consider the full context when performing extractions.
      A single paragraph or sentence may have different meanings depending on surrounding
      content, document type, and domain-specific terminology.\\n  </contextual_understanding>\\n\\n
      \ <systematic_analysis>\\n  - Systematic analysis: Before extracting, thoroughly
      understand:\\n    -- The nature and type of the document\\n    -- The specific
      aspects or concepts you need to focus on\\n    -- The expected output format
      and structure requirements\\n    -- Any constraints or special handling instructions\\n
      \ </systematic_analysis>\\n\\n  <quality_control>\\n  - Quality control: After
      extraction, verify that:\\n    -- All extracted information directly relates
      to the specified aspects/concepts\\n    -- The output format matches the required
      schema exactly\\n    -- No extraneous information has been included\\n    --
      All mandatory fields are present and correctly populated\\n  </quality_control>\\n\\n
      \ <conservative_approach>\\n  - Conservative approach: When in doubt about whether
      information qualifies for extraction:\\n    -- If the relevance is unclear,
      err on the side of exclusion\\n    -- If multiple interpretations are possible,
      choose the most conservative one\\n    -- If information is ambiguous, do not
      force an extraction\\n  </conservative_approach>\\n\\n  <structured_output_compliance>\\n
      \ - Structured output compliance: Adhere strictly to the specified JSON format
      requirements. Do not:\\n    -- Add extra fields beyond what is requested\\n
      \   -- Modify the structure or field names\\n    -- Include explanatory text
      outside the JSON structure\\n    -- Use code blocks or formatting markers unless
      explicitly required\\n  </structured_output_compliance>\\n\\n</critical_guidelines>\\n\\n<expected_deliverables>\\nEXPECTED
      DELIVERABLES:\\n  <deliverable_types>\\n  - Structured outputs: Clearly formatted
      and well-organized results based on the task requirements.\\n  - Explanations
      (when required): When required by the instructions, include justifications or
      reasoning for your interpretations.\\n  - Insights (when required): When required
      by the instructions, highlight trends, patterns, or noteworthy findings that
      could add value to the task.\\n  - References (when required): When required
      by the instructions, output references based on which you extracted data, provided
      insights, or made conclusions during the task.\\n  </deliverable_types>\\n</expected_deliverables>\\n\\n\\n<conclusion>\\nBy
      adhering to this framework, you will ensure consistent and high-quality performance
      across diverse document analysis tasks.\\n</conclusion>\"},{\"role\":\"user\",\"content\":\"<introduction>\\nBelow
      you will find document text and a list of concepts.\\n</introduction>\\n\\n<guidance_on_task_structure>\\nAll
      structured information in these instructions is provided using semantic XML
      tags. Field names correspond directly to tag names (e.g., concept_name, paragraph_text,
      sentence_text, additional_context, etc.).\\n</guidance_on_task_structure>\\n\\n<task_description>\\nYour
      task is to:\\n1. Read through the document text provided.\\n2. Identify whether
      each concept in the concepts list is addressed within the document text.\\n
      \   - Each concept is identified by a concept ID (for example, \\\"C0\\\", \\\"C1\\\",
      etc.) specified within <concept_id></concept_id> tags.\\n    - Each concept
      is described by a concept name specified within <concept_name></concept_name>
      tags and a concept description specified within <concept_description></concept_description>
      tags.\\n3. For each concept that appears, extract zero or more items relevant
      to that concept. The item format and structure are specified for each concept.\\n4.
      Produce a JSON array containing your extracted data, in the provided format.\\n</task_description>\\n\\n<concept_extraction_rules>\\nIf
      a concept is not addressed in the document text, you must still include an entry
      in the final JSON output but with an empty \\\"extracted_items\\\" list. However,
      for boolean concepts (with extracted item type \\\"bool\\\"), distinguish carefully:\\n
      \   - Extract True if the concept is confirmed or strongly supported by the
      document content (either explicitly stated or reasonably inferred)\\n    - Extract
      False if the concept is contradicted, denied, or if the document content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n    - Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the document
      is completely irrelevant to the concept, or (2) the document does not contain
      enough information to make a conclusion about the concept\\n\\nFollow these
      additional rules:\\n\\n- Output format:\\n    -- Provide your answer in the
      JSON format specified within <answer_format></answer_format> tags (do not include
      backticks, code fences, or any introductory/explanatory text). Follow this format
      exactly.\\n\\n- Consistency:\\n    -- Each JSON object in the list must have
      two keys: \\\"concept_id\\\" and \\\"extracted_items\\\".\\n    -- The value
      of \\\"concept_id\\\" must match exactly the ID of the concept (for example,
      \\\"C0\\\", \\\"C1\\\", etc.).\\n    -- The value of \\\"extracted_items\\\"
      must be an array. If the concept is not addressed or there are no items to extract,
      leave the array empty ([]). For boolean concepts, only leave empty if the concept
      is impossible to determine.\\n        --- Extracted items may be found directly
      (explicitly mentioned) or inferred from the content (implied or derivable from
      the information present).\\n        --- Guidance regarding the possible amount
      of extracted items for the concept is specified within <amount_of_extracted_items></amount_of_extracted_items>
      tags. Each extracted item, even if there is only one, must be part of the \\\"extracted_items\\\"
      array.\\n</concept_extraction_rules>\\n\\n<extracted_item_structure>\\n- Item
      structure:\\n    -- All extracted items must match the exact type specified
      for the concept.\\n    -- If a specific structure is provided for a concept
      within <expected_structure></expected_structure> tags, you must follow that
      structure for all extracted items corresponding to that concept.\\n    -- If
      a rating scale is provided for a concept within <rating_scale></rating_scale>
      tags, the extracted item value must be within that scale.\\n    -- If available
      labels are provided for a concept within <available_labels></available_labels>
      tags, the extracted item value must be a list containing only labels from the
      predefined set. The classification type is explicitly stated within <classification_type></classification_type>
      tags for each concept: for multi-class concepts, you must always select exactly
      one label (the most appropriate one even if not perfect); for multi-label concepts,
      leave the \\\"extracted_items\\\" array empty if none of the labels apply to
      the content.\\n    -- If there are example items within <extracted_item_examples></extracted_item_examples>
      tags, try to follow the same style and formatting for your extracted items.\\n
      \       --- Each example is provided within separate <extracted_item_example></extracted_item_example>
      tags.\\n    -- When extracting string values, retain them in the original language
      of the document without translating them.\\n</extracted_item_structure>\\n\\n<type_validation_rules>\\n-
      Types of extracted items:\\n    -- Each concept specifies an \\\"extracted item
      type\\\" within <extracted_item_type></extracted_item_type> tags. Ensure your
      extracted items strictly match that type. Python types are provided (e.g., str
      for string, int for integer, float for floating-point number, dict for object,
      etc.). Type compliance is mandatory - any deviation will result in invalid output.\\n
      \   -- Do not introduce any extra fields or modify the specified structure.\\n</type_validation_rules>\\n\\n<extracted_item_handling_rules>\\n-
      Handling missing or multiple items:\\n    -- If a concept is not mentioned at
      all, your output should still contain an entry for that concept with an empty
      \\\"extracted_items\\\" array.\\n    -- For boolean concepts (with extracted
      item type \\\"bool\\\"): Distinguish carefully between these cases:\\n        ---
      Extract True if the concept is confirmed or strongly supported by the provided
      content (either explicitly stated or reasonably inferred)\\n        --- Extract
      False if the concept is contradicted, denied, or if the provided content allows
      you to determine that the concept is not true (e.g., absence of expected content
      that should be present if the concept were true)\\n        --- Only leave \\\"extracted_items\\\"
      empty if the concept is impossible to determine because either: (1) the provided
      content is completely irrelevant to the concept, or (2) the provided content
      does not contain enough information to make a conclusion about the concept\\n
      \   -- For concepts that have <available_labels></available_labels> tags: behavior
      depends on the classification type explicitly stated within <classification_type></classification_type>
      tags. For multi-class concepts, you must always select exactly one label (the
      most appropriate one even if not perfect). For multi-label concepts, leave the
      \\\"extracted_items\\\" array empty if none of the labels apply to the content.\\n
      \   -- For concepts that have <available_labels></available_labels> tags: if
      multiple labels apply to the same instance or context, include them all in a
      single extracted item with multiple labels in the \\\"labels\\\" array (e.g.,
      {\\\"labels\\\": [\\\"label1\\\", \\\"label2\\\"]}). Only create multiple extracted
      items if there are genuinely distinct instances or contexts that warrant separate
      classification.\\n    -- For concepts that do not have <available_labels></available_labels>
      tags: if multiple items are found for a concept, include each as a separate
      entry within the \\\"extracted_items\\\" array.\\n</extracted_item_handling_rules>\\n\\n<output_constraints>\\n-
      No additional text:\\n    -- Do not include any headers, explanations, or text
      outside of the JSON array.\\n    -- Do not wrap your JSON response in backticks
      or any other formatting characters.\\n</output_constraints>\\n\\n<answer_format>\\nANSWER
      FORMAT (MANDATORY):\\n[\\n    {\\n        \\\"concept_id\\\": str,\\n        \\\"extracted_items:
      [\\n            ...\\n        ],\\n    },\\n    ...\\n]\\n</answer_format>\\n\\n<concepts>\\nCONCEPTS:\\n<concept
      id=\\\"C0\\\">\\n    <concept_id>C0</concept_id>\\n    \\n    <concept_name>Key
      aspects</concept_name>\\n\\n    <concept_description>\\n    Names of key aspects
      covered in the document\\n    </concept_description>\\n\\n    <expected_structure>\\n
      \   {\\n  \\\"aspect_names\\\": [\\n    str,\\n    ...\\n  ]\\n}\\n    </expected_structure>\\n\\n
      \   <amount_of_extracted_items>This concept may have zero, one, or multiple
      extracted items.</amount_of_extracted_items>\\n\\n    <extracted_item_type>dict
      (must be exactly as specified)</extracted_item_type>\\n</concept>\\n\\n</concepts>\\n\\n<document_text>\\n\u0423\u0433\u043E\u0434\u0430
      \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (NDA)\\n\\n\u0426\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      (\xAB\u0423\u0433\u043E\u0434\u0430\xBB) \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E
      \u0442\u0430 \u0443\u043A\u043B\u0430\u0434\u0435\u043D\u043E 16 \u043B\u0438\u043F\u043D\u044F
      2024 \u0440\u043E\u043A\u0443 \u043C\u0456\u0436:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430
      \u0410:\\n\\n_____\\n_____\\n_____\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430
      \u043E\u0441\u043E\u0431\u0430: _____\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      _____\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430 \u043F\u043E\u0448\u0442\u0430:
      _____\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430 B:\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n5678
      \u0412\u0438\u043F\u0430\u0434\u043A\u043E\u0432\u0438\u0439 \u0434\u0440\u0430\u0439\u0432\\n\u041D\u044C\u044E-\u0419\u043E\u0440\u043A,
      NY 00000\\n\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u043E\u0441\u043E\u0431\u0430:
      \u0414\u0436\u0435\u0439\u043D \u0414\u043E\u0443, \u043A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0422\u0435\u043B\u0435\u0444\u043E\u043D:
      (012) 345-6789\\n\u0415\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430
      \u0430\u0434\u0440\u0435\u0441\u0430: jane.doe@example.com\\n\\n1. \u041F\u0440\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F:\\n\\n\u041C\u0435\u0442\u043E\u044E
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0454 \u0437\u0430\u0445\u0438\u0441\u0442
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0430
      \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u0430
      \u043C\u0456\u0436 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u043F\u0456\u0434
      \u0447\u0430\u0441 \u043E\u0431\u0433\u043E\u0432\u043E\u0440\u0435\u043D\u044C
      \u0456 \u0432\u0437\u0430\u0454\u043C\u043E\u0434\u0456\u0439 \u0449\u043E\u0434\u043E
      \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457 \u0434\u0456\u043B\u043E\u0432\u043E\u0457
      \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456 \u0442\u0430 \u043F\u0430\u0440\u0442\u043D\u0435\u0440\u0441\u0442\u0432\u0430.\\n\\n2.
      \u0412\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u0414\u043B\u044F
      \u0446\u0456\u043B\u0435\u0439 \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438
      \xAB\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F\xBB \u043E\u0437\u043D\u0430\u0447\u0430\u0454
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u0442\u0430 \u0432\u0441\u044E
      \u043D\u0435\u043F\u0443\u0431\u043B\u0456\u0447\u043D\u0443 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u0443 \u0432 \u0431\u0443\u0434\u044C-\u044F\u043A\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456, \u0431\u0443\u0434\u044C \u0442\u043E \u0432
      \u0443\u0441\u043D\u0456\u0439, \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439,
      \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u0447\u0438
      \u0456\u043D\u0448\u0456\u0439 \u0444\u043E\u0440\u043C\u0456 \u0447\u0438 \u0437\u0430\u0441\u043E\u0431\u0456
      \u043C\u0430\u0441\u043E\u0432\u043E\u0457 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457,
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u0432\u0456\u0434 \u0442\u043E\u0433\u043E,
      \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430, \u043F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u0432\u0438\u0437\u043D\u0430\u0447\u0435\u043D\u0430
      \u044F\u043A \xAB\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430\xBB,
      \u044F\u043A\u0430 \u0431\u0443\u043B\u0430 \u0430\u0431\u043E \u043C\u043E\u0436\u0435
      \u0431\u0443\u0442\u0438 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0430, \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0430\u0431\u043E \u0441\u043F\u043E\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C,
      \u044F\u043A\u0430 (i) \u043C\u0430\u0454 \u0444\u0430\u043A\u0442\u0438\u0447\u043D\u0443
      \u0447\u0438 \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u0443 \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443
      \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C \u0447\u0435\u0440\u0435\u0437
      \u0442\u0435, \u0449\u043E \u0432\u043E\u043D\u0430 \u043D\u0435 \u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u043E\u044E
      \u0442\u0430 \u043D\u0435 \u0454 \u043B\u0435\u0433\u043A\u043E \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438
      \u043D\u0430\u043B\u0435\u0436\u043D\u0438\u043C\u0438 \u0437\u0430\u0441\u043E\u0431\u0430\u043C\u0438
      \u0456\u043D\u0448\u0438\u043C\u0438 \u043E\u0441\u043E\u0431\u0430\u043C\u0438,
      \u044F\u043A\u0456 \u043C\u043E\u0436\u0443\u0442\u044C \u043E\u0442\u0440\u0438\u043C\u0430\u0442\u0438
      \u0435\u043A\u043E\u043D\u043E\u043C\u0456\u0447\u043D\u0443 \u0446\u0456\u043D\u043D\u0456\u0441\u0442\u044C
      \u0432\u0456\u0434 \u0439\u043E\u0433\u043E \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u0447\u0438 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F,
      \u0430\u0431\u043E (ii) \u043F\u0456\u0434\u043B\u044F\u0433\u0430\u0454 \u043E\u0431\u0491\u0440\u0443\u043D\u0442\u043E\u0432\u0430\u043D\u0438\u043C
      \u0437\u0443\u0441\u0438\u043B\u043B\u044F\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0434\u043B\u044F
      \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u043D\u044F \u0441\u0435\u043A\u0440\u0435\u0442\u043D\u043E\u0441\u0442\u0456
      \u0442\u0430 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0432\u043A\u043B\u044E\u0447\u0430\u0454,
      \u0430\u043B\u0435 \u043D\u0435 \u043E\u0431\u043C\u0435\u0436\u0443\u0454\u0442\u044C\u0441\u044F
      \u0442\u0430\u043A\u0438\u043C\u0438 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0456\u044F\u043C\u0438:
      (1) \u0431\u0456\u0437\u043D\u0435\u0441-\u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0431\u0456\u0437\u043D\u0435\u0441-\u043F\u043B\u0430\u043D\u0438, \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457
      \u0442\u0430 \u043C\u043E\u0434\u0435\u043B\u0456), (2) \u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u0442\u0435\u0445\u043D\u0456\u0447\u043D\u0456
      \u0441\u043F\u0435\u0446\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457 \u0442\u0430
      \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430\u0446\u0456\u044F, \u043D\u0430\u0443\u043A\u043E\u0432\u043E-\u0434\u043E\u0441\u043B\u0456\u0434\u043D\u0430
      \u0434\u0456\u044F\u043B\u044C\u043D\u0456\u0441\u0442\u044C), (3) \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043F\u0440\u043E \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432 \u0456 \u0440\u0438\u043D\u043E\u043A
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u043A\u043B\u0456\u0454\u043D\u0442\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0456\u0441\u0442\u043E\u0440\u0456\u0457 \u043F\u0440\u043E\u0434\u0430\u0436\u0456\u0432
      \u0456 \u0448\u0430\u0431\u043B\u043E\u043D\u0438), (4) \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u043B
      \u0456 \u0432\u043D\u0443\u0442\u0440\u0456\u0448\u043D\u044F \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      (\u0441\u043F\u0438\u0441\u043A\u0438 \u0441\u043F\u0456\u0432\u0440\u043E\u0431\u0456\u0442\u043D\u0438\u043A\u0456\u0432
      \u0456 \u043A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F,
      \u0442\u0440\u0443\u0434\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438 \u0442\u0430
      \u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0456 \u0441\u043F\u0440\u0430\u0432\u0438),
      (5) \u0456\u043D\u0442\u0435\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u0430
      \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044C (\u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u0456
      \u0441\u0435\u043A\u0440\u0435\u0442\u0438 \u0442\u0430 \u043D\u043E\u0443-\u0445\u0430\u0443,
      \u043F\u0430\u0442\u0435\u043D\u0442\u0438 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u043F\u0430\u0442\u0435\u043D\u0442\u0438, \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456
      \u043F\u0440\u0430\u0432\u0430 \u0442\u0430 \u0437\u0430\u044F\u0432\u043A\u0438
      \u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u0441\u044C\u043A\u0456 \u043F\u0440\u0430\u0432\u0430,
      \u0442\u043E\u0440\u0433\u043E\u0432\u0456 \u043C\u0430\u0440\u043A\u0438 \u0442\u0430
      \u0437\u0430\u044F\u0432\u043A\u0438 \u043D\u0430 \u0442\u043E\u0440\u0433\u043E\u0432\u0435\u043B\u044C\u043D\u0456
      \u043C\u0430\u0440\u043A\u0438), (6) \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0447\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F (\u043F\u043B\u0430\u043D\u0438
      \u0437\u043B\u0438\u0442\u0442\u044F \u0442\u0430 \u043F\u043E\u0433\u043B\u0438\u043D\u0430\u043D\u043D\u044F,
      \u043A\u043E\u043D\u043A\u0443\u0440\u0435\u043D\u0442\u043D\u0438\u0439 \u0430\u043D\u0430\u043B\u0456\u0437
      \u0442\u0430 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0456\u0457). \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u0438\u0439
      \u043A\u043E\u0434 \u0442\u0430\u043A\u043E\u0436 \u043F\u043E\u0432\u0438\u043D\u0435\u043D
      \u0431\u0443\u0442\u0438 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439
      \u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u0438\u043C\u0435
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:
      (a) \u0454 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u044E
      \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456\u0432
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0430\u0431\u043E
      \u0457\u0457 \u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043D\u0438\u043A\u0430\u043C\u0438;
      (b) \u0431\u0443\u043B\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430
      \u0421\u0442\u043E\u0440\u043E\u043D\u0456-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0443
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0434\u043E \u0457\u0457 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F
      \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454;
      (c) \u0441\u0442\u0430\u0454 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0438\u043C
      \u0434\u043B\u044F \u0421\u0442\u043E\u0440\u043E\u043D\u0438-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0430
      \u043D\u0430 \u043D\u0435\u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0439
      \u043E\u0441\u043D\u043E\u0432\u0456 \u0432\u0456\u0434 \u043E\u0441\u043E\u0431\u0438,
      \u0456\u043D\u0448\u043E\u0457 \u043D\u0456\u0436 \u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447,
      \u044F\u043A\u0430 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C
      \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0430 \u0437\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u043D\u044F\u043C\u0438
      \u0449\u043E\u0434\u043E \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u043F\u0435\u0440\u0435\u0434 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0447\u0435\u043C;
      \u0430\u0431\u043E (d) \u0431\u0443\u043B\u0430 \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E
      \u0440\u043E\u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0430 \u0421\u0442\u043E\u0440\u043E\u043D\u043E\u044E-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0430\u0431\u043E
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u043E\u0457
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457. \u0406\u043C'\u044F
      \u0441\u043E\u0431\u0430\u043A\u0438 \u041F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 - \u0411\u043E\u0431.\\n\u041F\u043E\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u044F\u043A \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u043D\u0435 \u0454
      \u0432\u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u0438\u043C \u0434\u043B\u044F
      \u0442\u043E\u0433\u043E, \u0447\u0438 \u0454 \u0442\u0430\u043A\u0430 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F
      \u043A\u043E\u043C\u0435\u0440\u0446\u0456\u0439\u043D\u043E\u044E \u0442\u0430\u0454\u043C\u043D\u0438\u0446\u0435\u044E
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E \u0434\u043E \u0447\u0438\u043D\u043D\u043E\u0433\u043E
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u0430.
      \u0423\u0441\u044F \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u0437\u0430\u043B\u0438\u0448\u0430\u0454\u0442\u044C\u0441\u044F
      \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E\u044E \u0432\u043B\u0430\u0441\u043D\u0456\u0441\u0442\u044E
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454,
      \u0456 \u0421\u0442\u043E\u0440\u043E\u043D\u0430, \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454,
      \u043D\u0435 \u043C\u0430\u0454 \u0436\u043E\u0434\u043D\u0438\u0445 \u043F\u0440\u0430\u0432,
      \u0437\u0433\u0456\u0434\u043D\u043E \u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C,
      \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0437\u0430 \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C
      \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432, \u043F\u0440\u044F\u043C\u043E
      \u043F\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043D\u0438\u0445 \u0443
      \u0446\u044C\u043E\u043C\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0456.\\n\\n3.
      \u041E\u0431\u043E\u0432'\u044F\u0437\u043A\u0438 \u043F\u0440\u0438\u0439\u043C\u0430\u044E\u0447\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438:\\n\\n\u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u044F\u043A\u0430 \u043E\u0442\u0440\u0438\u043C\u0443\u0454 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E (\\\"\u0421\u0442\u043E\u0440\u043E\u043D\u0430-\u043E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\\\"):\\n\\na.
      \u0417\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0456\u0441\u0442\u044C
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457 \u0442\u0430 \u043D\u0435
      \u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0443\u0432\u0430\u0442\u0438
      \u0457\u0457 \u0442\u0440\u0435\u0442\u0456\u043C \u043E\u0441\u043E\u0431\u0430\u043C
      \u0431\u0435\u0437 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044C\u043E\u0457
      \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u043E\u0457 \u0437\u0433\u043E\u0434\u0438
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\nb.
      \u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0432\u0438\u043A\u043B\u044E\u0447\u043D\u043E
      \u0437 \u043C\u0435\u0442\u043E\u044E \u043E\u0446\u0456\u043D\u043A\u0438 \u0447\u0438
      \u0437\u0430\u043B\u0443\u0447\u0435\u043D\u043D\u044F \u0434\u043E \u043F\u043E\u0442\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0434\u0456\u043B\u043E\u0432\u043E\u0457 \u0441\u043F\u0456\u0432\u043F\u0440\u0430\u0446\u0456.\\n\\n\u0432.
      \u0412\u0436\u0438\u0432\u0430\u0442\u0438 \u0432\u0441\u0456\u0445 \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u0438\u0445
      \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0438\u0445 \u0437\u0430\u0445\u043E\u0434\u0456\u0432
      \u0434\u043B\u044F \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0441\u0442\u0456
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457, \u044F\u043A\u0456
      \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043D\u0435
      \u043C\u0435\u043D\u0448\u0438\u043C\u0438, \u043D\u0456\u0436 \u0437\u0430\u043F\u043E\u0431\u0456\u0436\u043D\u0456
      \u0437\u0430\u0445\u043E\u0434\u0438, \u0432\u0436\u0438\u0442\u0456 \u0434\u043B\u044F
      \u0437\u0430\u0445\u0438\u0441\u0442\u0443 \u0432\u043B\u0430\u0441\u043D\u043E\u0457
      \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457.\\n\\n4. \u0412\u0438\u043D\u044F\u0442\u043A\u0438
      \u0437 \u043A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u043E\u0457
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u0457:\\n\\n\u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0430
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0430\u0454
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u044F\u043A\u0430:\\n\\na.
      \u0404 \u0430\u0431\u043E \u0441\u0442\u0430\u0454 \u0437\u0430\u0433\u0430\u043B\u044C\u043D\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C
      \u0447\u0435\u0440\u0435\u0437 \u043D\u0435\u043F\u0440\u0430\u0432\u043E\u043C\u0456\u0440\u043D\u0456
      \u0434\u0456\u0457 \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454.\\n\\nb. \u0412\u0436\u0435 \u0432\u0456\u0434\u043E\u043C\u0438\u0439
      \u041E\u0442\u0440\u0438\u043C\u0443\u044E\u0447\u0456\u0439 \u0441\u0442\u043E\u0440\u043E\u043D\u0456
      \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u0440\u043E\u0437\u043A\u0440\u0438\u0442\u0442\u044F.\\n\\n\u0432.
      \u041E\u0442\u0440\u0438\u043C\u0430\u043D\u043E \u043D\u0430 \u0437\u0430\u043A\u043E\u043D\u043D\u0438\u0445
      \u043F\u0456\u0434\u0441\u0442\u0430\u0432\u0430\u0445 \u0432\u0456\u0434 \u0442\u0440\u0435\u0442\u044C\u043E\u0457
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0431\u0435\u0437 \u043F\u043E\u0440\u0443\u0448\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438.\\n\\nd. \u0420\u043E\u0437\u0440\u043E\u0431\u043B\u044F\u0454\u0442\u044C\u0441\u044F
      \u043D\u0435\u0437\u0430\u043B\u0435\u0436\u043D\u043E \u041E\u0434\u0435\u0440\u0436\u0443\u0432\u0430\u0447\u0435\u043C
      \u0431\u0435\u0437 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F
      \u0430\u0431\u043E \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u043D\u0430
      \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n6.
      \u041F\u043E\u0432\u0435\u0440\u043D\u0435\u043D\u043D\u044F \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0456\u0432:\\n\\n\u041F\u0456\u0441\u043B\u044F
      \u043F\u0440\u0438\u043F\u0438\u043D\u0435\u043D\u043D\u044F \u0434\u0456\u0457
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0430\u0431\u043E \u0437\u0430
      \u0437\u0430\u043F\u0438\u0442\u043E\u043C \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454
      \u0432\u0441\u0456 \u043C\u0430\u0442\u0435\u0440\u0456\u0430\u043B\u0438, \u0449\u043E
      \u043C\u0456\u0441\u0442\u044F\u0442\u044C \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E, \u0421\u0442\u043E\u0440\u043E\u043D\u0456,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0430\u0431\u043E
      \u0437\u043D\u0438\u0449\u0443\u0454 \u0457\u0445 \u043D\u0430 \u0440\u043E\u0437\u0441\u0443\u0434
      \u0421\u0442\u043E\u0440\u043E\u043D\u0438, \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454.\\n\\n7.
      \u0411\u0435\u0437 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0457:\\n\\n\u041D\u0456\u0449\u043E
      \u0432 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u0438\u0441\u044F \u044F\u043A
      \u043D\u0430\u0434\u0430\u043D\u043D\u044F \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0445
      \u043F\u0440\u0430\u0432 \u0421\u0442\u043E\u0440\u043E\u043D\u0456, \u0449\u043E
      \u043E\u0442\u0440\u0438\u043C\u0443\u0454, \u0437\u0430 \u043B\u0456\u0446\u0435\u043D\u0437\u0456\u0454\u044E
      \u0447\u0438 \u0456\u043D\u0448\u0438\u043C \u0447\u0438\u043D\u043E\u043C \u043D\u0430
      \u0431\u0443\u0434\u044C-\u044F\u043A\u0443 \u041A\u043E\u043D\u0444\u0456\u0434\u0435\u043D\u0446\u0456\u0439\u043D\u0443
      \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E \u0421\u0442\u043E\u0440\u043E\u043D\u0438,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454, \u0437\u0430
      \u0432\u0438\u043D\u044F\u0442\u043A\u043E\u043C \u0432\u0438\u043F\u0430\u0434\u043A\u0456\u0432,
      \u043F\u0440\u044F\u043C\u043E \u0432\u0438\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445
      \u0443 \u0446\u0456\u0439 \u0423\u0433\u043E\u0434\u0456.\\n\\n8. \u0417\u0430\u0441\u0442\u043E\u0441\u043E\u0432\u043D\u0435
      \u0437\u0430\u043A\u043E\u043D\u043E\u0434\u0430\u0432\u0441\u0442\u0432\u043E
      \u0442\u0430 \u0441\u043F\u043E\u0440\u0438:\\n\\n\u0426\u044F \u0423\u0433\u043E\u0434\u0430
      \u0440\u0435\u0433\u0443\u043B\u044E\u0454\u0442\u044C\u0441\u044F \u0442\u0430
      \u0442\u043B\u0443\u043C\u0430\u0447\u0438\u0442\u044C\u0441\u044F \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u043D\u043E
      \u0434\u043E \u0437\u0430\u043A\u043E\u043D\u0456\u0432 \u0448\u0442\u0430\u0442\u0443
      \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F \u0431\u0435\u0437
      \u0443\u0440\u0430\u0445\u0443\u0432\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0456\u0432
      \u043A\u043E\u043B\u0456\u0437\u0456\u0439\u043D\u043E\u0433\u043E \u043F\u0440\u0430\u0432\u0430.\\n\\n\u0423\u0441\u0456
      \u0441\u0443\u043F\u0435\u0440\u0435\u0447\u043A\u0438 \u0432\u0438\u0440\u0456\u0448\u0443\u044E\u0442\u044C\u0441\u044F
      \u0441\u0443\u0434\u0430\u043C\u0438 \u0448\u0442\u0430\u0442\u0443 \u041A\u0430\u043B\u0456\u0444\u043E\u0440\u043D\u0456\u044F.
      \u0414\u043E\u0433\u043E\u0432\u0456\u0440 \u0434\u0456\u0454 \u043F\u0440\u043E\u0442\u044F\u0433\u043E\u043C
      5 (\u043F\u2019\u044F\u0442\u0438) \u0440\u043E\u043A\u0456\u0432 \u0437 \u0434\u0430\u0442\u0438
      \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u043D\u044F \u0446\u044C\u043E\u0433\u043E
      \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0443.\\n\\n9. \u0420\u0456\u0437\u043D\u0435:\\n\\na.
      \u0426\u044F \u0423\u0433\u043E\u0434\u0430 \u044F\u0432\u043B\u044F\u0454 \u0441\u043E\u0431\u043E\u044E
      \u043F\u043E\u0432\u043D\u0443 \u0443\u0433\u043E\u0434\u0443 \u043C\u0456\u0436
      \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438 \u0449\u043E\u0434\u043E
      \u0457\u0457 \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430 \u0442\u0430 \u0437\u0430\u043C\u0456\u043D\u044E\u0454
      \u0432\u0441\u0456 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456 \u0430\u0431\u043E
      \u043E\u0434\u043D\u043E\u0447\u0430\u0441\u043D\u0456 \u0443\u0441\u043D\u0456
      \u0447\u0438 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456 \u0443\u0433\u043E\u0434\u0438
      \u0449\u043E\u0434\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u043F\u0440\u0435\u0434\u043C\u0435\u0442\u0430.\\n\\nb.
      \u0411\u0443\u0434\u044C-\u044F\u043A\u0456 \u043F\u043E\u043F\u0440\u0430\u0432\u043A\u0438
      \u0430\u0431\u043E \u0437\u043C\u0456\u043D\u0438 \u0434\u043E \u0446\u0456\u0454\u0457
      \u0423\u0433\u043E\u0434\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438
      \u0437\u0440\u043E\u0431\u043B\u0435\u043D\u0456 \u0432 \u043F\u0438\u0441\u044C\u043C\u043E\u0432\u0456\u0439
      \u0444\u043E\u0440\u043C\u0456 \u0442\u0430 \u043F\u0456\u0434\u043F\u0438\u0441\u0430\u043D\u0456
      \u043E\u0431\u043E\u043C\u0430 \u0441\u0442\u043E\u0440\u043E\u043D\u0430\u043C\u0438.\\n\\n\u0432.
      \u042F\u043A\u0449\u043E \u0431\u0443\u0434\u044C-\u044F\u043A\u0435 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F
      \u0446\u0456\u0454\u0457 \u0423\u0433\u043E\u0434\u0438 \u0431\u0443\u0434\u0435
      \u0432\u0438\u0437\u043D\u0430\u043D\u043E \u0442\u0430\u043A\u0438\u043C, \u0449\u043E
      \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0440\u0435\u0448\u0442\u0430 \u043C\u0430\u0454
      \u0431\u0443\u0442\u0438 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u0430 \u044F\u043A\u043E\u043C\u043E\u0433\u0430
      \u043F\u043E\u0432\u043D\u0456\u0448\u0435, \u0430 \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u043D\u044F,
      \u044F\u043A\u0435 \u043D\u0435 \u043C\u0430\u0454 \u043F\u043E\u0437\u043E\u0432\u043D\u043E\u0457
      \u0441\u0438\u043B\u0438, \u0431\u0443\u0434\u0435 \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u0441\u044F
      \u0437\u043C\u0456\u043D\u0435\u043D\u0438\u043C \u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u043E\u043C\u0443
      \u043E\u0431\u0441\u044F\u0437\u0456, \u043D\u0435\u043E\u0431\u0445\u0456\u0434\u043D\u043E\u043C\u0443
      \u0434\u043B\u044F \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F
      \u0439\u043E\u0433\u043E \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0443 \u0441\u043F\u043E\u0441\u0456\u0431, \u044F\u043A\u0438\u0439 \u043D\u0430\u0439\u0431\u0456\u043B\u044C\u0448\u0435
      \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u043D\u0430\u043C\u0456\u0440\u0430\u043C
      \u0441\u0442\u043E\u0440\u0456\u043D.\\n\\nd. \u0421\u0442\u043E\u0440\u043E\u043D\u0430,
      \u0449\u043E \u0440\u043E\u0437\u043A\u0440\u0438\u0432\u0430\u0454 \u0456\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044E,
      \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043D\u0430\u043B\u0435\u0436\u043D\u043E\u044E
      \u043E\u0441\u043E\u0431\u043E\u044E \u0434\u043B\u044F \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044F
      \u0446\u044C\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u0430\u043A\u0442\u0443.\\n\\n\u041D\u0410
      \u041F\u041E\u0421\u0412\u0406\u0414\u0427\u0415\u041D\u041D\u042F \u0427\u041E\u0413\u041E
      \u0441\u0442\u043E\u0440\u043E\u043D\u0438 \u0443\u043A\u043B\u0430\u043B\u0438
      \u0446\u044E \u0423\u0433\u043E\u0434\u0443 \u043F\u0440\u043E \u043D\u0435\u0440\u043E\u0437\u0433\u043E\u043B\u043E\u0448\u0435\u043D\u043D\u044F
      \u043D\u0430 \u043F\u0435\u0440\u0448\u0443 \u0434\u0430\u0442\u0443, \u0437\u0430\u0437\u043D\u0430\u0447\u0435\u043D\u0443
      \u0432\u0438\u0449\u0435.\\n\\n_____\\n\u0410\u0432\u0442\u043E\u0440: ___________________________\\n\u0406\u043C'\u044F:
      _____\\n\u041D\u0430\u0437\u0432\u0430: _____\\n\u0414\u0430\u0442\u0430: ___________________________\\n\\n\u0422\u041E\u0412
      \xAB\u041F\u0440\u0438\u043A\u043B\u0430\u0434.\u041A\u043E\u043C\xBB.\\n\u0410\u0432\u0442\u043E\u0440:
      ___________________________\\n\u0406\u043C'\u044F: \u0414\u0436\u0435\u0439\u043D
      \u0414\u043E\u0443\\n\u0417\u0432\u0430\u043D\u043D\u044F: \u041A\u0435\u0440\u0443\u044E\u0447\u0438\u0439
      \u043F\u0430\u0440\u0442\u043D\u0435\u0440\\n\u0414\u0430\u0442\u0430: ___________________________\\n</document_text>\\n\"}],\"model\":\"gpt-4.1-mini\",\"max_tokens\":4096,\"stream\":false,\"temperature\":0.3,\"top_p\":0.3}"
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      api-key:
      - DUMMY
      authorization:
      - DUMMY
      connection:
      - keep-alive
      content-length:
      - '26524'
      content-type:
      - application/json
      host:
      - DUMMY
      user-agent:
      - AzureOpenAI/Python 1.99.9
      x-stainless-arch:
      - other:amd64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - DUMMY
      x-stainless-package-version:
      - 1.99.9
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '120.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - DUMMY
    method: POST
    uri: https://<DUMMY-ENDPOINT>/openai/deployments/DUMMY-DEPLOYMENT/chat/completions?api-version=2025-03-01-preview
  response:
    body:
      string: '{"choices": [{"content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "protected_material_code": {"filtered": false, "detected":
        false}, "protected_material_text": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}},
        "finish_reason": "stop", "index": 0, "logprobs": null, "message": {"annotations":
        [], "content": "[\n  {\n    \"concept_id\": \"C0\",\n    \"extracted_items\":
        [\n      {\n        \"aspect_names\": [\n          \"\u041f\u0440\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\",\n          \"\u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f
        \u043a\u043e\u043d\u0444\u0456\u0434\u0435\u043d\u0446\u0456\u0439\u043d\u043e\u0457
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457\",\n          \"\u041e\u0431\u043e\u0432''\u044f\u0437\u043a\u0438
        \u043f\u0440\u0438\u0439\u043c\u0430\u044e\u0447\u043e\u0457 \u0441\u0442\u043e\u0440\u043e\u043d\u0438\",\n          \"\u0412\u0438\u043d\u044f\u0442\u043a\u0438
        \u0437 \u043a\u043e\u043d\u0444\u0456\u0434\u0435\u043d\u0446\u0456\u0439\u043d\u043e\u0457
        \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457\",\n          \"\u041f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f
        \u043c\u0430\u0442\u0435\u0440\u0456\u0430\u043b\u0456\u0432\",\n          \"\u0411\u0435\u0437
        \u043b\u0456\u0446\u0435\u043d\u0437\u0456\u0457\",\n          \"\u0417\u0430\u0441\u0442\u043e\u0441\u043e\u0432\u043d\u0435
        \u0437\u0430\u043a\u043e\u043d\u043e\u0434\u0430\u0432\u0441\u0442\u0432\u043e
        \u0442\u0430 \u0441\u043f\u043e\u0440\u0438\",\n          \"\u0420\u0456\u0437\u043d\u0435\"\n        ]\n      }\n    ]\n  }\n]",
        "refusal": null, "role": "assistant"}}], "created": 1755549489, "id": "chatcmpl-DUMMY",
        "model": "gpt-4.1-mini-2025-04-14", "object": "chat.completion", "prompt_filter_results":
        [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false,
        "severity": "safe"}, "jailbreak": {"filtered": false, "detected": false},
        "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered":
        false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}],
        "system_fingerprint": "fp_4f3d32ad4e", "usage": {"completion_tokens": 123,
        "completion_tokens_details": {"accepted_prediction_tokens": 0, "audio_tokens":
        0, "reasoning_tokens": 0, "rejected_prediction_tokens": 0}, "prompt_tokens":
        5030, "prompt_tokens_details": {"audio_tokens": 0, "cached_tokens": 4992},
        "total_tokens": 5153}}'
    headers:
      Content-Length:
      - '1840'
      Content-Type:
      - application/json
      Date:
      - DUMMY
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      apim-request-id:
      - DUMMY
      azureml-model-session:
      - DUMMY
      x-accel-buffering:
      - 'no'
      x-content-type-options:
      - nosniff
      x-ms-deployment-name:
      - DUMMY
      x-ms-rai-invoked:
      - DUMMY
      x-ms-region:
      - DUMMY
      x-ratelimit-limit-requests:
      - DUMMY
      x-ratelimit-limit-tokens:
      - DUMMY
      x-ratelimit-remaining-requests:
      - DUMMY
      x-ratelimit-remaining-tokens:
      - DUMMY
      x-request-id:
      - DUMMY
    status:
      code: 200
      message: OK
version: 1
