[project]
name = "contextgem"
version = "0.19.2"
description = "Effortless LLM extraction from documents"
authors = [{ name = "shcherbak-ai", email = "sergii@shcherbak.ai" }]
requires-python = ">=3.10,<3.14"
readme = "README.md"
license = { text = "Apache-2.0" }
maintainers = [{ name = "shcherbak-ai", email = "sergii@shcherbak.ai" }]
keywords = [
    "artificial-intelligence",
    "aspect-extraction",
    "automated-prompting",
    "concept-extraction",
    "content-extraction",
    "context-aware",
    "contextgem",
    "contract-analysis",
    "contract-automation",
    "contract-intelligence",
    "contract-management",
    "contract-parsing",
    "contract-review",
    "data-extraction",
    "document",
    "document-analysis",
    "document-extraction",
    "document-intelligence",
    "document-parsing",
    "document-pipeline",
    "document-processing",
    "document-qa",
    "document-understanding",
    "docx",
    "entity-extraction",
    "extraction-justifications",
    "extraction-pipeline",
    "fintech",
    "generative-ai",
    "information-extraction",
    "insights-extraction",
    "knowledge-extraction",
    "large-language-models",
    "legaltech",
    "llm",
    "llm-extraction",
    "llm-framework",
    "llm-library",
    "llm-reasoning",
    "low-code",
    "machine-learning",
    "multilingual",
    "multimodal",
    "neural-segmentation",
    "nlp",
    "no-prompt-engineering",
    "prompt-free",
    "question-answering",
    "reference-mapping",
    "semantic-analysis",
    "structured-data",
    "structured-data-extraction",
    "text-analysis",
    "text-processing",
    "topic-extraction",
    "unstructured-data",
    "zero-shot",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Legal Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "aiolimiter (>=1.2.1,<2.0.0)",
    "colorlog (>=6.9.0,<7.0.0)",
    "fastjsonschema (>=2.21.2,<3.0.0)",
    "genai-prices==0.0.29",                # pin version due to frequent API changes
    "jinja2 (>=3.1.5,<4.0.0)",
    "litellm==1.77.5",                     # pin version due to occasional instability between patches and minor versions
    "lxml (>=5.4.0,<6.0.0)",
    "openai==1.109.1",                     # pinned version for stable compatibility with litellm (after issue with 1.100.0)
    "pillow (>=11.3.0,<12.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "python-ulid (>=3.0.0,<4.0.0)",
    "typing-extensions (>=4.14.1,<5.0.0)",
    "wtpsplit-lite (>=0.2.0,<0.3.0)",
]

[project.urls]
Homepage = "https://github.com/shcherbak-ai/contextgem"
Documentation = "https://github.com/shcherbak-ai/contextgem/blob/main/README.md"
Repository = "https://github.com/shcherbak-ai/contextgem.git"
"Bug Tracker" = "https://github.com/shcherbak-ai/contextgem/issues"

[dependency-groups]
dev = [
    "coverage>=7.6.12,<8",
    "pytest>=8.3.4,<9",
    "pytest-cov>=6.0.0,<7",
    "python-dotenv>=1.0.1,<2",
    "pre-commit>=4.1.0,<5",
    "sphinx>=7.0.0,<8.0.0",
    "sphinx-autodoc-typehints<3.0.0",
    "sphinx-book-theme>=1.1.4,<2",
    "sphinx-copybutton>=0.5.2,<0.6",
    "sphinx-design>=0.6.1,<0.7",
    "sphinxext-opengraph>=0.9.1,<0.10",
    "nbformat>=5.10.4,<6",
    "commitizen>=4.5.1,<5",
    "sphinx-sitemap>=2.6.0,<3",
    "pytest-recording>=0.13.4,<0.14",
    "bandit>=1.8.3,<2",
    "pympler~=1.1",
    "memory-profiler>=0.61.0,<0.62",
    "ruff>=0.12.3",
    "pyright>=1.1.403",
    "types-lxml>=2025.3.30",
    "deptry>=0.23.0",
    "interrogate>=1.7.0",
    "sphinx-autobuild>=2024.10.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "/contextgem",
    "/README.md",
    "/LICENSE",
    "/NOTICE",
    "/pyproject.toml",
]

[tool.hatch.build.targets.wheel]
include = ["/contextgem"]

[tool.ruff]
line-length = 88
target-version = "py310"
indent-width = 4
exclude = [
    ".venv",
    "notebooks",
    "dev/usage_examples/vs_other_frameworks",
    "code_sample.py",
]

[tool.ruff.lint]
extend-select = ["I", "B", "UP", "N", "SIM"]

[tool.ruff.lint.isort]
force-single-line = false
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
# ignore the above required-imports for usage examples
"dev/**" = ["I002"]
"**/__init__.py" = ["I002"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "basic"
exclude = [
    ".venv",
    "notebooks",
    "dev/usage_examples/vs_other_frameworks",
    "code_sample.py",
]

[tool.pytest.ini_options]
addopts = "-vv -s"
log_cli = true
log_cli_level = "WARNING"

[tool.commitizen]
name = "cz_conventional_commits"

[tool.deptry]
extend_exclude = [
    ".venv",
    "dev/usage_examples/vs_other_frameworks",
    "dev/generate_notebooks.py",
    "code_sample.py",
]

[tool.deptry.per_rule_ignores]
DEP002 = ["openai"] # due to pinned version in dependencies

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-nested-classes = true
ignore-overloaded-functions = true
fail-under = 95
exclude = [".venv", "docs", "notebooks", "dev/usage_examples", "code_sample.py"]
